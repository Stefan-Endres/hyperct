#from hyperct import *
from hyperct._complex import *


def func(x):
    import numpy
    return numpy.sum((x - 3) ** 2) + 2.0 * (x[0] + 10)


def g_cons(x):  # (Requires n > 2)
    import numpy
    # return x[0] - 0.5 * x[2] + 0.5
    return x[0]  # + x[2] #+ 0.5

def init_triangulation(n, gen, check, nn_checks=None, bounds=None):
    HC = Complex(n, domain=bounds)
    HC.triangulate()
    #HC.triangulate_c()
    for i in range(gen):
        HC.split_generation()
    #print('DONE')
    # Test that all the correct vertices are present
    if bounds is None:
        #print(f'HC.V.cache = {HC.V.cache}')
        for i, v in enumerate(HC.V.cache):
            #print(f'check[i] = {check[i]}')
            #print(f'v = {v}')
            numpy.testing.assert_equal(check[i], v)
    else:
        for i, v in enumerate(HC.V.cache):
            numpy.testing.assert_equal(check[i], tuple(HC.V[v].x_a))


    # Build checks
    nnck = [(0.3, -3.9, -1.5, -3.0, -9.5), (0.3, -3.9, -1.5, 1.0, 11000.5),
                 (0.475, 0.025000000000000133, -1.4, 3.0, 8248.0)]
    testout = {}
    for v in nnck:
        nn_check = []
        for v2 in HC.V[v].nn:
            nn_check.append(v2.x)

        testout[v] = nn_check

    print(f'nn_checks = {testout}')

    # Test if the vertex connections are correct
    if nn_checks is not None:
        for v in nn_checks:
            nn_check = []
            for v2 in HC.V[v].nn:
                nn_check.append(v2.x)

            numpy.testing.assert_equal(nn_check, nn_checks[v])
# Test
class TestCube(object):
    def test_1_1_2D_cube_init(self):  # TODO: REMOVE FUNC AFTER SPLIT
        """Test that the initial 2D cube has the correct coords"""
        check = [(0, 0), (1, 1), (1, 0), (0, 1), (0.5, 0.5)]

        nn_checks = {(0.5, 0.5): [(0, 1), (1, 0), (0, 0), (1, 1)],
                     (0, 1): [(0, 0), (1, 1), (0.5, 0.5)]}

        init_triangulation(2, 0, check, nn_checks)

    def test_1_2_2D_cube_splits(self):
        """Test that the 2D cube subtriangulations has the correct coords"""
        check = [(0, 0), (1, 1), (1, 0), (0, 1), (0.5, 0.5), (0.0, 0.5),
                 (0.5, 0.0),
                 (0.25, 0.25), (1.0, 0.5), (0.5, 1.0), (0.75, 0.75),
                 (0.75, 0.25),
                 (0.25, 0.75), (0.5, 0.25), (0.25, 0.5), (0.375, 0.375),
                 (0.0, 0.25),
                 (0.25, 0.0), (0.125, 0.125), (0.125, 0.375), (0.375, 0.125),
                 (0.5, 0.75), (0.75, 0.5), (0.625, 0.625), (1.0, 0.75),
                 (0.75, 1.0),
                 (0.875, 0.875), (0.875, 0.625), (0.625, 0.875), (0.625, 0.375),
                 (1.0, 0.25), (0.75, 0.0), (0.875, 0.125), (0.875, 0.375),
                 (0.625, 0.125), (0.375, 0.625), (0.0, 0.75), (0.25, 1.0),
                 (0.125, 0.875), (0.125, 0.625), (0.375, 0.875)]

        nn_checks = {(0, 0): [(0.25, 0.0), (0.0, 0.25), (0.125, 0.125)],
                     (0.625, 0.375): [(0.5, 0.5), (0.75, 0.25), (0.75, 0.5),
                     (0.5, 0.25)],
                     (0, 1): [(0.25, 1.0), (0.125, 0.875),(0.0, 0.75)],
                     (0.625, 0.125): [(0.5, 0.0), (0.75, 0.25), (0.75, 0.0),
                                      (0.5, 0.25)]}


        init_triangulation(2, 2, check, nn_checks)

    def test_2_1_3D_cube_init(self):
        """Test that the initial 3D cube has the correct coords"""
        check = [(0, 0, 0), (1, 1, 1), (1, 0, 0), (1, 1, 0), (1, 0, 1),
                 (0, 1, 0), (0, 1, 1), (0, 0, 1), (0.5, 0.5, 0.5)]

        nn_checks = {
            (1, 1, 1): [(1, 1, 0), (0, 1, 1), (1, 0, 0), (0, 0, 1), (1, 0, 1),
                        (0.5, 0.5, 0.5), (0, 1, 0)],
            (1, 0, 1): [(1, 0, 0), (0, 0, 1), (0, 0, 0), (0.5, 0.5, 0.5),
                        (1, 1, 1)],
            (0.5, 0.5, 0.5): [(1, 1, 0), (0, 1, 1), (0, 1, 0), (1, 0, 0),
                              (0, 0, 1), (1, 0, 1), (0, 0, 0), (1, 1, 1)]}

        init_triangulation(3, 0, check, nn_checks)

    def test_2_2_3D_cube_splits(self):
        """Test that the 3D cube subtriangulations has the correct coords"""
        check = [(0, 0, 0), (1, 1, 1), (1, 0, 0), (1, 1, 0), (1, 0, 1),
                 (0, 1, 0),
                 (0, 1, 1), (0, 0, 1), (0.5, 0.5, 0.5), (0.0, 0.5, 0.5),
                 (0.0, 0.0, 0.5), (0.0, 0.5, 0.0), (0.5, 0.0, 0.5),
                 (0.5, 0.0, 0.0),
                 (0.5, 0.5, 0.0), (0.25, 0.25, 0.25), (1.0, 0.5, 0.5),
                 (1.0, 1.0, 0.5),
                 (1.0, 0.5, 1.0), (0.5, 1.0, 0.5), (0.5, 1.0, 1.0),
                 (0.5, 0.5, 1.0),
                 (0.75, 0.75, 0.75), (1.0, 0.0, 0.5), (1.0, 0.5, 0.0),
                 (0.75, 0.25, 0.25), (0.5, 1.0, 0.0), (0.75, 0.75, 0.25),
                 (0.5, 0.0, 1.0), (0.75, 0.25, 0.75), (0.0, 1.0, 0.5),
                 (0.25, 0.75, 0.25), (0.0, 0.5, 1.0), (0.25, 0.75, 0.75),
                 (0.25, 0.25, 0.75), (0.5, 0.25, 0.25), (0.5, 0.5, 0.25),
                 (0.5, 0.25, 0.5), (0.25, 0.5, 0.25), (0.25, 0.5, 0.5),
                 (0.25, 0.25, 0.5), (0.375, 0.375, 0.375), (0.0, 0.25, 0.25),
                 (0.0, 0.0, 0.25), (0.0, 0.25, 0.0), (0.25, 0.0, 0.25),
                 (0.25, 0.0, 0.0), (0.25, 0.25, 0.0), (0.125, 0.125, 0.125),
                 (0.0, 0.5, 0.25), (0.0, 0.25, 0.5), (0.125, 0.375, 0.375),
                 (0.25, 0.0, 0.5), (0.125, 0.125, 0.375), (0.25, 0.5, 0.0),
                 (0.125, 0.375, 0.125), (0.5, 0.0, 0.25), (0.375, 0.125, 0.375),
                 (0.5, 0.25, 0.0), (0.375, 0.125, 0.125), (0.375, 0.375, 0.125),
                 (0.5, 0.75, 0.75), (0.5, 0.5, 0.75), (0.5, 0.75, 0.5),
                 (0.75, 0.5, 0.75), (0.75, 0.5, 0.5), (0.75, 0.75, 0.5),
                 (0.625, 0.625, 0.625), (1.0, 0.75, 0.75), (1.0, 1.0, 0.75),
                 (1.0, 0.75, 1.0), (0.75, 1.0, 0.75), (0.75, 1.0, 1.0),
                 (0.75, 0.75, 1.0), (0.875, 0.875, 0.875), (1.0, 0.5, 0.75),
                 (1.0, 0.75, 0.5), (0.875, 0.625, 0.625), (0.75, 1.0, 0.5),
                 (0.875, 0.875, 0.625), (0.75, 0.5, 1.0), (0.875, 0.625, 0.875),
                 (0.5, 1.0, 0.75), (0.625, 0.875, 0.625), (0.5, 0.75, 1.0),
                 (0.625, 0.875, 0.875), (0.625, 0.625, 0.875),
                 (0.75, 0.5, 0.25),
                 (0.75, 0.25, 0.5), (0.625, 0.375, 0.375), (1.0, 0.25, 0.25),
                 (1.0, 0.0, 0.25), (1.0, 0.25, 0.0), (0.75, 0.0, 0.25),
                 (0.75, 0.0, 0.0), (0.75, 0.25, 0.0), (0.875, 0.125, 0.125),
                 (1.0, 0.5, 0.25), (1.0, 0.25, 0.5), (0.875, 0.375, 0.375),
                 (0.75, 0.0, 0.5), (0.875, 0.125, 0.375), (0.75, 0.5, 0.0),
                 (0.875, 0.375, 0.125), (0.625, 0.125, 0.375),
                 (0.625, 0.125, 0.125),
                 (0.625, 0.375, 0.125), (0.5, 0.75, 0.25),
                 (0.625, 0.625, 0.375),
                 (1.0, 0.75, 0.25), (1.0, 1.0, 0.25), (1.0, 0.75, 0.0),
                 (0.75, 1.0, 0.25), (0.75, 1.0, 0.0), (0.75, 0.75, 0.0),
                 (0.875, 0.875, 0.125), (0.875, 0.625, 0.375),
                 (0.875, 0.875, 0.375),
                 (0.875, 0.625, 0.125), (0.5, 1.0, 0.25), (0.625, 0.875, 0.375),
                 (0.5, 0.75, 0.0), (0.625, 0.875, 0.125), (0.625, 0.625, 0.125),
                 (0.5, 0.25, 0.75), (0.625, 0.375, 0.625), (1.0, 0.25, 0.75),
                 (1.0, 0.0, 0.75), (1.0, 0.25, 1.0), (0.75, 0.0, 0.75),
                 (0.75, 0.0, 1.0), (0.75, 0.25, 1.0), (0.875, 0.125, 0.875),
                 (0.875, 0.375, 0.625), (0.875, 0.125, 0.625),
                 (0.875, 0.375, 0.875),
                 (0.5, 0.0, 0.75), (0.625, 0.125, 0.625), (0.5, 0.25, 1.0),
                 (0.625, 0.125, 0.875), (0.625, 0.375, 0.875),
                 (0.25, 0.75, 0.5),
                 (0.375, 0.625, 0.375), (0.0, 0.75, 0.25), (0.0, 1.0, 0.25),
                 (0.0, 0.75, 0.0), (0.25, 1.0, 0.25), (0.25, 1.0, 0.0),
                 (0.25, 0.75, 0.0), (0.125, 0.875, 0.125), (0.0, 0.75, 0.5),
                 (0.125, 0.625, 0.375), (0.25, 1.0, 0.5), (0.125, 0.875, 0.375),
                 (0.125, 0.625, 0.125), (0.375, 0.875, 0.375),
                 (0.375, 0.875, 0.125),
                 (0.375, 0.625, 0.125), (0.25, 0.5, 0.75),
                 (0.375, 0.625, 0.625),
                 (0.0, 0.75, 0.75), (0.0, 1.0, 0.75), (0.0, 0.75, 1.0),
                 (0.25, 1.0, 0.75), (0.25, 1.0, 1.0), (0.25, 0.75, 1.0),
                 (0.125, 0.875, 0.875), (0.0, 0.5, 0.75), (0.125, 0.625, 0.625),
                 (0.125, 0.875, 0.625), (0.25, 0.5, 1.0), (0.125, 0.625, 0.875),
                 (0.375, 0.875, 0.625), (0.375, 0.875, 0.875),
                 (0.375, 0.625, 0.875),
                 (0.375, 0.375, 0.625), (0.0, 0.25, 0.75), (0.0, 0.0, 0.75),
                 (0.0, 0.25, 1.0), (0.25, 0.0, 0.75), (0.25, 0.0, 1.0),
                 (0.25, 0.25, 1.0), (0.125, 0.125, 0.875),
                 (0.125, 0.375, 0.625),
                 (0.125, 0.125, 0.625), (0.125, 0.375, 0.875),
                 (0.375, 0.125, 0.625),
                 (0.375, 0.125, 0.875), (0.375, 0.375, 0.875)]

        nn_checks = {(0.5, 0.25, 0.25): [(0.375, 0.375, 0.125), (0.5, 0.5, 0.0),
                                         (0.75, 0.25, 0.25),
                                         (0.625, 0.375, 0.375),
                                         (0.625, 0.125, 0.375),
                                         (0.625, 0.125, 0.125),
                                         (0.5, 0.5, 0.25), (0.25, 0.25, 0.25),
                                         (0.375, 0.375, 0.375),
                                         (0.5, 0.25, 0.5), (0.5, 0.5, 0.5),
                                         (0.5, 0.0, 0.25),
                                         (0.375, 0.125, 0.375), (0.5, 0.0, 0.5),
                                         (0.5, 0.25, 0.0),
                                         (0.375, 0.125, 0.125), (0.5, 0.0, 0.0),
                                         (0.625, 0.375, 0.125)],
                     (0.625, 0.625, 0.875): [(0.75, 0.5, 1.0),
                                             (0.75, 0.75, 1.0),
                                             (0.5, 0.75, 1.0), (0.5, 0.5, 1.0),
                                             (0.5, 0.5, 0.75),
                                             (0.5, 0.75, 0.75),
                                             (0.75, 0.5, 0.75),
                                             (0.75, 0.75, 0.75)],
                     (0, 0, 0): [(0.0, 0.25, 0.0), (0.125, 0.125, 0.125),
                                 (0.0, 0.0, 0.25), (0.25, 0.0, 0.0),
                                 (0.0, 0.25, 0.25), (0.25, 0.25, 0.0),
                                 (0.25, 0.0, 0.25)]}

        init_triangulation(3, 2, check, nn_checks)

    def test_3_1_4D_cube_init(self):
        """Test that the initial 4D cube has the correct coords"""
        check = [(0, 0, 0, 0), (1, 1, 1, 1), (1, 0, 0, 0), (1, 1, 0, 0),
                 (1, 1, 1, 0), (1, 1, 0, 1), (1, 0, 1, 0), (1, 0, 1, 1),
                 (1, 0, 0, 1), (0, 1, 0, 0), (0, 1, 1, 0), (0, 1, 1, 1),
                 (0, 1, 0, 1), (0, 0, 1, 0), (0, 0, 1, 1), (0, 0, 0, 1),
                 (0.5, 0.5, 0.5, 0.5)]
        nn_checks = {(0, 1, 1, 0): [(1, 1, 1, 0), (0, 1, 1, 1), (1, 1, 1, 1),
                                    (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 0),
                                    (0.5, 0.5, 0.5, 0.5)],
                     (0.5, 0.5, 0.5, 0.5): [(1, 1, 0, 1), (1, 0, 1, 1),
                                            (1, 1, 1, 0), (1, 0, 0, 0),
                                            (1, 1, 0, 0), (1, 0, 1, 0),
                                            (0, 1, 1, 1), (0, 0, 0, 1),
                                            (1, 1, 1, 1), (1, 0, 0, 1),
                                            (0, 1, 0, 0), (0, 0, 1, 0),
                                            (0, 0, 0, 0), (0, 1, 1, 0),
                                            (0, 1, 0, 1), (0, 0, 1, 1)],
                     (1, 0, 0, 0): [(1, 1, 0, 1), (1, 0, 1, 1), (1, 1, 1, 0),
                                    (1, 1, 0, 0), (1, 0, 1, 0), (1, 1, 1, 1),
                                    (1, 0, 0, 1), (0, 0, 0, 0),
                                    (0.5, 0.5, 0.5, 0.5)]}

        init_triangulation(4, 0, check, nn_checks)

    def test_3_2_4D_cube_splits(self):
        """Test that the 4D cube subtriangulations has the correct coords"""
        check = [(0, 0, 0, 0), (1, 1, 1, 1), (1, 0, 0, 0), (1, 1, 0, 0),
                 (1, 1, 1, 0),
                 (1, 1, 0, 1), (1, 0, 1, 0), (1, 0, 1, 1), (1, 0, 0, 1),
                 (0, 1, 0, 0),
                 (0, 1, 1, 0), (0, 1, 1, 1), (0, 1, 0, 1), (0, 0, 1, 0),
                 (0, 0, 1, 1),
                 (0, 0, 0, 1), (0.5, 0.5, 0.5, 0.5), (0.0, 0.5, 0.5, 0.5),
                 (0.0, 0.0, 0.5, 0.5), (0.0, 0.0, 0.0, 0.5),
                 (0.0, 0.0, 0.5, 0.0),
                 (0.0, 0.5, 0.0, 0.5), (0.0, 0.5, 0.0, 0.0),
                 (0.0, 0.5, 0.5, 0.0),
                 (0.5, 0.0, 0.5, 0.5), (0.5, 0.0, 0.0, 0.5),
                 (0.5, 0.0, 0.0, 0.0),
                 (0.5, 0.0, 0.5, 0.0), (0.5, 0.5, 0.0, 0.5),
                 (0.5, 0.5, 0.0, 0.0),
                 (0.5, 0.5, 0.5, 0.0), (0.25, 0.25, 0.25, 0.25),
                 (1.0, 0.5, 0.5, 0.5),
                 (1.0, 1.0, 0.5, 0.5), (1.0, 1.0, 1.0, 0.5),
                 (1.0, 1.0, 0.5, 1.0),
                 (1.0, 0.5, 1.0, 0.5), (1.0, 0.5, 1.0, 1.0),
                 (1.0, 0.5, 0.5, 1.0),
                 (0.5, 1.0, 0.5, 0.5), (0.5, 1.0, 1.0, 0.5),
                 (0.5, 1.0, 1.0, 1.0),
                 (0.5, 1.0, 0.5, 1.0), (0.5, 0.5, 1.0, 0.5),
                 (0.5, 0.5, 1.0, 1.0),
                 (0.5, 0.5, 0.5, 1.0), (0.75, 0.75, 0.75, 0.75),
                 (1.0, 0.0, 0.5, 0.5),
                 (1.0, 0.0, 0.0, 0.5), (1.0, 0.0, 0.5, 0.0),
                 (1.0, 0.5, 0.0, 0.5),
                 (1.0, 0.5, 0.0, 0.0), (1.0, 0.5, 0.5, 0.0),
                 (0.75, 0.25, 0.25, 0.25),
                 (1.0, 1.0, 0.0, 0.5), (1.0, 1.0, 0.5, 0.0),
                 (0.5, 1.0, 0.0, 0.5),
                 (0.5, 1.0, 0.0, 0.0), (0.5, 1.0, 0.5, 0.0),
                 (0.75, 0.75, 0.25, 0.25),
                 (1.0, 0.5, 1.0, 0.0), (0.5, 1.0, 1.0, 0.0),
                 (0.5, 0.5, 1.0, 0.0),
                 (0.75, 0.75, 0.75, 0.25), (1.0, 0.5, 0.0, 1.0),
                 (0.5, 1.0, 0.0, 1.0),
                 (0.5, 0.5, 0.0, 1.0), (0.75, 0.75, 0.25, 0.75),
                 (1.0, 0.0, 1.0, 0.5),
                 (0.5, 0.0, 1.0, 0.5), (0.5, 0.0, 1.0, 0.0),
                 (0.75, 0.25, 0.75, 0.25),
                 (1.0, 0.0, 0.5, 1.0), (0.5, 0.0, 1.0, 1.0),
                 (0.5, 0.0, 0.5, 1.0),
                 (0.75, 0.25, 0.75, 0.75), (0.5, 0.0, 0.0, 1.0),
                 (0.75, 0.25, 0.25, 0.75), (0.0, 1.0, 0.5, 0.5),
                 (0.0, 1.0, 0.0, 0.5),
                 (0.0, 1.0, 0.5, 0.0), (0.25, 0.75, 0.25, 0.25),
                 (0.0, 1.0, 1.0, 0.5),
                 (0.0, 0.5, 1.0, 0.5), (0.0, 0.5, 1.0, 0.0),
                 (0.25, 0.75, 0.75, 0.25),
                 (0.0, 1.0, 0.5, 1.0), (0.0, 0.5, 1.0, 1.0),
                 (0.0, 0.5, 0.5, 1.0),
                 (0.25, 0.75, 0.75, 0.75), (0.0, 0.5, 0.0, 1.0),
                 (0.25, 0.75, 0.25, 0.75), (0.0, 0.0, 1.0, 0.5),
                 (0.25, 0.25, 0.75, 0.25), (0.0, 0.0, 0.5, 1.0),
                 (0.25, 0.25, 0.75, 0.75), (0.25, 0.25, 0.25, 0.75)]

        nn_checks = {(0, 0, 0, 0): [(0.0, 0.5, 0.5, 0.0), (0.5, 0.0, 0.5, 0.5),
                                    (0.5, 0.5, 0.0, 0.5),
                                    (0.25, 0.25, 0.25, 0.25),
                                    (0.5, 0.0, 0.0, 0.5), (0.5, 0.0, 0.5, 0.0),
                                    (0.5, 0.5, 0.0, 0.0), (0.0, 0.0, 0.5, 0.0),
                                    (0.0, 0.5, 0.0, 0.0), (0.0, 0.0, 0.0, 0.5),
                                    (0.0, 0.5, 0.5, 0.5), (0.0, 0.0, 0.5, 0.5),
                                    (0.0, 0.5, 0.0, 0.5), (0.5, 0.0, 0.0, 0.0),
                                    (0.5, 0.5, 0.5, 0.0)],
                     (1.0, 1.0, 0.5, 0.5): [(1.0, 1.0, 0.5, 1.0), (1, 1, 0, 1),
                                            (1.0, 1.0, 1.0, 0.5),
                                            (1.0, 0.5, 0.5, 0.5), (1, 1, 1, 0),
                                            (1.0, 1.0, 0.5, 0.0),
                                            (1.0, 1.0, 0.0, 0.5), (1, 1, 0, 0),
                                            (1, 1, 1, 1), (0.5, 1.0, 0.5, 0.5),
                                            (0.5, 0.5, 0.5, 0.5),
                                            (0.75, 0.75, 0.75, 0.75),
                                            (0.75, 0.75, 0.25, 0.25),
                                            (0.75, 0.75, 0.75, 0.25),
                                            (0.75, 0.75, 0.25, 0.75)],
                     (0.25, 0.25, 0.25, 0.75): [(0.0, 0.0, 0.5, 1.0),
                                                (0.0, 0.5, 0.0, 1.0),
                                                (0.5, 0.0, 0.0, 1.0),
                                                (0.5, 0.5, 0.5, 1.0),
                                                (0, 0, 0, 1),
                                                (0.0, 0.5, 0.5, 1.0),
                                                (0.5, 0.0, 0.5, 1.0),
                                                (0.5, 0.5, 0.0, 1.0),
                                                (0.0, 0.0, 0.0, 0.5),
                                                (0.0, 0.0, 0.5, 0.5),
                                                (0.0, 0.5, 0.5, 0.5),
                                                (0.0, 0.5, 0.0, 0.5),
                                                (0.5, 0.0, 0.5, 0.5),
                                                (0.5, 0.5, 0.0, 0.5),
                                                (0.5, 0.5, 0.5, 0.5),
                                                (0.5, 0.0, 0.0, 0.5)]}

        init_triangulation(4, 1, check, nn_checks)

    def test_4_1_5D_cube_init(self):
        """Test that the initial 5D cube has the correct coords"""
        check = [(0, 0, 0, 0, 0), (1, 1, 1, 1, 1), (1, 0, 0, 0, 0),
                 (1, 1, 0, 0, 0),
                 (1, 1, 1, 0, 0), (1, 1, 1, 1, 0), (1, 1, 1, 0, 1),
                 (1, 1, 0, 1, 0),
                 (1, 1, 0, 1, 1), (1, 1, 0, 0, 1), (1, 0, 1, 0, 0),
                 (1, 0, 1, 1, 0),
                 (1, 0, 1, 1, 1), (1, 0, 1, 0, 1), (1, 0, 0, 1, 0),
                 (1, 0, 0, 1, 1),
                 (1, 0, 0, 0, 1), (0, 1, 0, 0, 0), (0, 1, 1, 0, 0),
                 (0, 1, 1, 1, 0),
                 (0, 1, 1, 1, 1), (0, 1, 1, 0, 1), (0, 1, 0, 1, 0),
                 (0, 1, 0, 1, 1),
                 (0, 1, 0, 0, 1), (0, 0, 1, 0, 0), (0, 0, 1, 1, 0),
                 (0, 0, 1, 1, 1),
                 (0, 0, 1, 0, 1), (0, 0, 0, 1, 0), (0, 0, 0, 1, 1),
                 (0, 0, 0, 0, 1),
                 (0.5, 0.5, 0.5, 0.5, 0.5)]

        nn_checks = {(0, 0, 0, 0): [], (0, 1, 0, 1, 1): [(0, 0, 0, 0, 0), (
        0.5, 0.5, 0.5, 0.5, 0.5), (0, 0, 0, 1, 1), (1, 1, 0, 1, 1),
                                                         (0, 1, 0, 0, 0),
                                                         (0, 1, 0, 0, 1),
                                                         (0, 1, 0, 1, 0),
                                                         (0, 0, 0, 0, 1),
                                                         (1, 1, 1, 1, 1),
                                                         (0, 1, 1, 1, 1),
                                                         (0, 0, 0, 1, 0)]}

        init_triangulation(5, 0, check, nn_checks)

    def test_4_2_5D_cube_splits(self):
        """Test that the 5D cube subtriangulations has the correct coords"""
        check = [(0, 0, 0, 0, 0), (1, 1, 1, 1, 1), (1, 0, 0, 0, 0),
                 (1, 1, 0, 0, 0), (1, 1, 1, 0, 0), (1, 1, 1, 1, 0),
                 (1, 1, 1, 0, 1), (1, 1, 0, 1, 0), (1, 1, 0, 1, 1),
                 (1, 1, 0, 0, 1), (1, 0, 1, 0, 0), (1, 0, 1, 1, 0),
                 (1, 0, 1, 1, 1), (1, 0, 1, 0, 1), (1, 0, 0, 1, 0),
                 (1, 0, 0, 1, 1), (1, 0, 0, 0, 1), (0, 1, 0, 0, 0),
                 (0, 1, 1, 0, 0), (0, 1, 1, 1, 0), (0, 1, 1, 1, 1),
                 (0, 1, 1, 0, 1), (0, 1, 0, 1, 0), (0, 1, 0, 1, 1),
                 (0, 1, 0, 0, 1), (0, 0, 1, 0, 0), (0, 0, 1, 1, 0),
                 (0, 0, 1, 1, 1), (0, 0, 1, 0, 1), (0, 0, 0, 1, 0),
                 (0, 0, 0, 1, 1), (0, 0, 0, 0, 1), (0.5, 0.5, 0.5, 0.5, 0.5),
                 (0.0, 0.5, 0.5, 0.5, 0.5), (0.0, 0.0, 0.5, 0.5, 0.5),
                 (0.0, 0.0, 0.0, 0.5, 0.5), (0.0, 0.0, 0.0, 0.0, 0.5),
                 (0.0, 0.0, 0.0, 0.5, 0.0), (0.0, 0.0, 0.5, 0.0, 0.5),
                 (0.0, 0.0, 0.5, 0.0, 0.0), (0.0, 0.0, 0.5, 0.5, 0.0),
                 (0.0, 0.5, 0.0, 0.5, 0.5), (0.0, 0.5, 0.0, 0.0, 0.5),
                 (0.0, 0.5, 0.0, 0.0, 0.0), (0.0, 0.5, 0.0, 0.5, 0.0),
                 (0.0, 0.5, 0.5, 0.0, 0.5), (0.0, 0.5, 0.5, 0.0, 0.0),
                 (0.0, 0.5, 0.5, 0.5, 0.0), (0.5, 0.0, 0.5, 0.5, 0.5),
                 (0.5, 0.0, 0.0, 0.5, 0.5), (0.5, 0.0, 0.0, 0.0, 0.5),
                 (0.5, 0.0, 0.0, 0.0, 0.0), (0.5, 0.0, 0.0, 0.5, 0.0),
                 (0.5, 0.0, 0.5, 0.0, 0.5), (0.5, 0.0, 0.5, 0.0, 0.0),
                 (0.5, 0.0, 0.5, 0.5, 0.0), (0.5, 0.5, 0.0, 0.5, 0.5),
                 (0.5, 0.5, 0.0, 0.0, 0.5), (0.5, 0.5, 0.0, 0.0, 0.0),
                 (0.5, 0.5, 0.0, 0.5, 0.0), (0.5, 0.5, 0.5, 0.0, 0.5),
                 (0.5, 0.5, 0.5, 0.0, 0.0), (0.5, 0.5, 0.5, 0.5, 0.0),
                 (0.25, 0.25, 0.25, 0.25, 0.25), (1.0, 0.5, 0.5, 0.5, 0.5),
                 (1.0, 1.0, 0.5, 0.5, 0.5), (1.0, 1.0, 1.0, 0.5, 0.5),
                 (1.0, 1.0, 1.0, 1.0, 0.5), (1.0, 1.0, 1.0, 0.5, 1.0),
                 (1.0, 1.0, 0.5, 1.0, 0.5), (1.0, 1.0, 0.5, 1.0, 1.0),
                 (1.0, 1.0, 0.5, 0.5, 1.0), (1.0, 0.5, 1.0, 0.5, 0.5),
                 (1.0, 0.5, 1.0, 1.0, 0.5), (1.0, 0.5, 1.0, 1.0, 1.0),
                 (1.0, 0.5, 1.0, 0.5, 1.0), (1.0, 0.5, 0.5, 1.0, 0.5),
                 (1.0, 0.5, 0.5, 1.0, 1.0), (1.0, 0.5, 0.5, 0.5, 1.0),
                 (0.5, 1.0, 0.5, 0.5, 0.5), (0.5, 1.0, 1.0, 0.5, 0.5),
                 (0.5, 1.0, 1.0, 1.0, 0.5), (0.5, 1.0, 1.0, 1.0, 1.0),
                 (0.5, 1.0, 1.0, 0.5, 1.0), (0.5, 1.0, 0.5, 1.0, 0.5),
                 (0.5, 1.0, 0.5, 1.0, 1.0), (0.5, 1.0, 0.5, 0.5, 1.0),
                 (0.5, 0.5, 1.0, 0.5, 0.5), (0.5, 0.5, 1.0, 1.0, 0.5),
                 (0.5, 0.5, 1.0, 1.0, 1.0), (0.5, 0.5, 1.0, 0.5, 1.0),
                 (0.5, 0.5, 0.5, 1.0, 0.5), (0.5, 0.5, 0.5, 1.0, 1.0),
                 (0.5, 0.5, 0.5, 0.5, 1.0), (0.75, 0.75, 0.75, 0.75, 0.75),
                 (1.0, 0.0, 0.5, 0.5, 0.5), (1.0, 0.0, 0.0, 0.5, 0.5),
                 (1.0, 0.0, 0.0, 0.0, 0.5), (1.0, 0.0, 0.0, 0.5, 0.0),
                 (1.0, 0.0, 0.5, 0.0, 0.5), (1.0, 0.0, 0.5, 0.0, 0.0),
                 (1.0, 0.0, 0.5, 0.5, 0.0), (1.0, 0.5, 0.0, 0.5, 0.5),
                 (1.0, 0.5, 0.0, 0.0, 0.5), (1.0, 0.5, 0.0, 0.0, 0.0),
                 (1.0, 0.5, 0.0, 0.5, 0.0), (1.0, 0.5, 0.5, 0.0, 0.5),
                 (1.0, 0.5, 0.5, 0.0, 0.0), (1.0, 0.5, 0.5, 0.5, 0.0),
                 (0.75, 0.25, 0.25, 0.25, 0.25), (1.0, 1.0, 0.0, 0.5, 0.5),
                 (1.0, 1.0, 0.0, 0.0, 0.5), (1.0, 1.0, 0.0, 0.5, 0.0),
                 (1.0, 1.0, 0.5, 0.0, 0.5), (1.0, 1.0, 0.5, 0.0, 0.0),
                 (1.0, 1.0, 0.5, 0.5, 0.0), (0.5, 1.0, 0.0, 0.5, 0.5),
                 (0.5, 1.0, 0.0, 0.0, 0.5), (0.5, 1.0, 0.0, 0.0, 0.0),
                 (0.5, 1.0, 0.0, 0.5, 0.0), (0.5, 1.0, 0.5, 0.0, 0.5),
                 (0.5, 1.0, 0.5, 0.0, 0.0), (0.5, 1.0, 0.5, 0.5, 0.0),
                 (0.75, 0.75, 0.25, 0.25, 0.25), (1.0, 1.0, 1.0, 0.0, 0.5),
                 (1.0, 1.0, 1.0, 0.5, 0.0), (1.0, 0.5, 1.0, 0.0, 0.5),
                 (1.0, 0.5, 1.0, 0.0, 0.0), (1.0, 0.5, 1.0, 0.5, 0.0),
                 (0.5, 1.0, 1.0, 0.0, 0.5), (0.5, 1.0, 1.0, 0.0, 0.0),
                 (0.5, 1.0, 1.0, 0.5, 0.0), (0.5, 0.5, 1.0, 0.0, 0.5),
                 (0.5, 0.5, 1.0, 0.0, 0.0), (0.5, 0.5, 1.0, 0.5, 0.0),
                 (0.75, 0.75, 0.75, 0.25, 0.25), (1.0, 1.0, 0.5, 1.0, 0.0),
                 (1.0, 0.5, 1.0, 1.0, 0.0), (1.0, 0.5, 0.5, 1.0, 0.0),
                 (0.5, 1.0, 1.0, 1.0, 0.0), (0.5, 1.0, 0.5, 1.0, 0.0),
                 (0.5, 0.5, 1.0, 1.0, 0.0), (0.5, 0.5, 0.5, 1.0, 0.0),
                 (0.75, 0.75, 0.75, 0.75, 0.25), (1.0, 1.0, 0.5, 0.0, 1.0),
                 (1.0, 0.5, 1.0, 0.0, 1.0), (1.0, 0.5, 0.5, 0.0, 1.0),
                 (0.5, 1.0, 1.0, 0.0, 1.0), (0.5, 1.0, 0.5, 0.0, 1.0),
                 (0.5, 0.5, 1.0, 0.0, 1.0), (0.5, 0.5, 0.5, 0.0, 1.0),
                 (0.75, 0.75, 0.75, 0.25, 0.75), (1.0, 1.0, 0.0, 1.0, 0.5),
                 (1.0, 0.5, 0.0, 1.0, 0.5), (1.0, 0.5, 0.0, 1.0, 0.0),
                 (0.5, 1.0, 0.0, 1.0, 0.5), (0.5, 1.0, 0.0, 1.0, 0.0),
                 (0.5, 0.5, 0.0, 1.0, 0.5), (0.5, 0.5, 0.0, 1.0, 0.0),
                 (0.75, 0.75, 0.25, 0.75, 0.25), (1.0, 1.0, 0.0, 0.5, 1.0),
                 (1.0, 0.5, 0.0, 1.0, 1.0), (1.0, 0.5, 0.0, 0.5, 1.0),
                 (0.5, 1.0, 0.0, 1.0, 1.0), (0.5, 1.0, 0.0, 0.5, 1.0),
                 (0.5, 0.5, 0.0, 1.0, 1.0), (0.5, 0.5, 0.0, 0.5, 1.0),
                 (0.75, 0.75, 0.25, 0.75, 0.75), (1.0, 0.5, 0.0, 0.0, 1.0),
                 (0.5, 1.0, 0.0, 0.0, 1.0), (0.5, 0.5, 0.0, 0.0, 1.0),
                 (0.75, 0.75, 0.25, 0.25, 0.75), (1.0, 0.0, 1.0, 0.5, 0.5),
                 (1.0, 0.0, 1.0, 0.0, 0.5), (1.0, 0.0, 1.0, 0.5, 0.0),
                 (0.5, 0.0, 1.0, 0.5, 0.5), (0.5, 0.0, 1.0, 0.0, 0.5),
                 (0.5, 0.0, 1.0, 0.0, 0.0), (0.5, 0.0, 1.0, 0.5, 0.0),
                 (0.75, 0.25, 0.75, 0.25, 0.25), (1.0, 0.0, 1.0, 1.0, 0.5),
                 (1.0, 0.0, 0.5, 1.0, 0.5), (1.0, 0.0, 0.5, 1.0, 0.0),
                 (0.5, 0.0, 1.0, 1.0, 0.5), (0.5, 0.0, 1.0, 1.0, 0.0),
                 (0.5, 0.0, 0.5, 1.0, 0.5), (0.5, 0.0, 0.5, 1.0, 0.0),
                 (0.75, 0.25, 0.75, 0.75, 0.25), (1.0, 0.0, 1.0, 0.5, 1.0),
                 (1.0, 0.0, 0.5, 1.0, 1.0), (1.0, 0.0, 0.5, 0.5, 1.0),
                 (0.5, 0.0, 1.0, 1.0, 1.0), (0.5, 0.0, 1.0, 0.5, 1.0),
                 (0.5, 0.0, 0.5, 1.0, 1.0), (0.5, 0.0, 0.5, 0.5, 1.0),
                 (0.75, 0.25, 0.75, 0.75, 0.75), (1.0, 0.0, 0.5, 0.0, 1.0),
                 (0.5, 0.0, 1.0, 0.0, 1.0), (0.5, 0.0, 0.5, 0.0, 1.0),
                 (0.75, 0.25, 0.75, 0.25, 0.75), (1.0, 0.0, 0.0, 1.0, 0.5),
                 (0.5, 0.0, 0.0, 1.0, 0.5), (0.5, 0.0, 0.0, 1.0, 0.0),
                 (0.75, 0.25, 0.25, 0.75, 0.25), (1.0, 0.0, 0.0, 0.5, 1.0),
                 (0.5, 0.0, 0.0, 1.0, 1.0), (0.5, 0.0, 0.0, 0.5, 1.0),
                 (0.75, 0.25, 0.25, 0.75, 0.75), (0.5, 0.0, 0.0, 0.0, 1.0),
                 (0.75, 0.25, 0.25, 0.25, 0.75), (0.0, 1.0, 0.5, 0.5, 0.5),
                 (0.0, 1.0, 0.0, 0.5, 0.5), (0.0, 1.0, 0.0, 0.0, 0.5),
                 (0.0, 1.0, 0.0, 0.5, 0.0), (0.0, 1.0, 0.5, 0.0, 0.5),
                 (0.0, 1.0, 0.5, 0.0, 0.0), (0.0, 1.0, 0.5, 0.5, 0.0),
                 (0.25, 0.75, 0.25, 0.25, 0.25), (0.0, 1.0, 1.0, 0.5, 0.5),
                 (0.0, 1.0, 1.0, 0.0, 0.5), (0.0, 1.0, 1.0, 0.5, 0.0),
                 (0.0, 0.5, 1.0, 0.5, 0.5), (0.0, 0.5, 1.0, 0.0, 0.5),
                 (0.0, 0.5, 1.0, 0.0, 0.0), (0.0, 0.5, 1.0, 0.5, 0.0),
                 (0.25, 0.75, 0.75, 0.25, 0.25), (0.0, 1.0, 1.0, 1.0, 0.5),
                 (0.0, 1.0, 0.5, 1.0, 0.5), (0.0, 1.0, 0.5, 1.0, 0.0),
                 (0.0, 0.5, 1.0, 1.0, 0.5), (0.0, 0.5, 1.0, 1.0, 0.0),
                 (0.0, 0.5, 0.5, 1.0, 0.5), (0.0, 0.5, 0.5, 1.0, 0.0),
                 (0.25, 0.75, 0.75, 0.75, 0.25), (0.0, 1.0, 1.0, 0.5, 1.0),
                 (0.0, 1.0, 0.5, 1.0, 1.0), (0.0, 1.0, 0.5, 0.5, 1.0),
                 (0.0, 0.5, 1.0, 1.0, 1.0), (0.0, 0.5, 1.0, 0.5, 1.0),
                 (0.0, 0.5, 0.5, 1.0, 1.0), (0.0, 0.5, 0.5, 0.5, 1.0),
                 (0.25, 0.75, 0.75, 0.75, 0.75), (0.0, 1.0, 0.5, 0.0, 1.0),
                 (0.0, 0.5, 1.0, 0.0, 1.0), (0.0, 0.5, 0.5, 0.0, 1.0),
                 (0.25, 0.75, 0.75, 0.25, 0.75), (0.0, 1.0, 0.0, 1.0, 0.5),
                 (0.0, 0.5, 0.0, 1.0, 0.5), (0.0, 0.5, 0.0, 1.0, 0.0),
                 (0.25, 0.75, 0.25, 0.75, 0.25), (0.0, 1.0, 0.0, 0.5, 1.0),
                 (0.0, 0.5, 0.0, 1.0, 1.0), (0.0, 0.5, 0.0, 0.5, 1.0),
                 (0.25, 0.75, 0.25, 0.75, 0.75), (0.0, 0.5, 0.0, 0.0, 1.0),
                 (0.25, 0.75, 0.25, 0.25, 0.75), (0.0, 0.0, 1.0, 0.5, 0.5),
                 (0.0, 0.0, 1.0, 0.0, 0.5), (0.0, 0.0, 1.0, 0.5, 0.0),
                 (0.25, 0.25, 0.75, 0.25, 0.25), (0.0, 0.0, 1.0, 1.0, 0.5),
                 (0.0, 0.0, 0.5, 1.0, 0.5), (0.0, 0.0, 0.5, 1.0, 0.0),
                 (0.25, 0.25, 0.75, 0.75, 0.25), (0.0, 0.0, 1.0, 0.5, 1.0),
                 (0.0, 0.0, 0.5, 1.0, 1.0), (0.0, 0.0, 0.5, 0.5, 1.0),
                 (0.25, 0.25, 0.75, 0.75, 0.75), (0.0, 0.0, 0.5, 0.0, 1.0),
                 (0.25, 0.25, 0.75, 0.25, 0.75), (0.0, 0.0, 0.0, 1.0, 0.5),
                 (0.25, 0.25, 0.25, 0.75, 0.25), (0.0, 0.0, 0.0, 0.5, 1.0),
                 (0.25, 0.25, 0.25, 0.75, 0.75), (0.25, 0.25, 0.25, 0.25, 0.75)]

        nn_checks = {(1, 1, 1, 1, 1): [(1.0, 1.0, 1.0, 0.5, 1.0),
                                       (1.0, 1.0, 0.5, 1.0, 1.0),
                                       (1.0, 0.5, 0.5, 0.5, 0.5),
                                       (1.0, 0.5, 1.0, 1.0, 0.5),
                                       (0.5, 0.5, 1.0, 1.0, 1.0),
                                       (1.0, 0.5, 0.5, 1.0, 0.5),
                                       (1.0, 0.5, 1.0, 0.5, 0.5),
                                       (0.5, 0.5, 0.5, 0.5, 1.0),
                                       (0.5, 0.5, 1.0, 0.5, 1.0),
                                       (0.5, 0.5, 0.5, 1.0, 1.0),
                                       (0.5, 1.0, 0.5, 0.5, 0.5),
                                       (0.5, 1.0, 1.0, 1.0, 0.5),
                                       (0.5, 1.0, 1.0, 0.5, 0.5),
                                       (0.5, 1.0, 0.5, 1.0, 0.5),
                                       (1.0, 1.0, 1.0, 0.5, 0.5),
                                       (1.0, 1.0, 0.5, 1.0, 0.5),
                                       (1.0, 1.0, 0.5, 0.5, 0.5),
                                       (1.0, 1.0, 1.0, 1.0, 0.5),
                                       (1.0, 1.0, 0.5, 0.5, 1.0),
                                       (1.0, 0.5, 1.0, 0.5, 1.0),
                                       (1.0, 0.5, 0.5, 1.0, 1.0),
                                       (0.5, 1.0, 0.5, 0.5, 1.0),
                                       (0.5, 0.5, 1.0, 0.5, 0.5),
                                       (1.0, 0.5, 0.5, 0.5, 1.0),
                                       (1.0, 0.5, 1.0, 1.0, 1.0),
                                       (0.5, 0.5, 0.5, 1.0, 0.5),
                                       (0.75, 0.75, 0.75, 0.75, 0.75),
                                       (0.5, 0.5, 1.0, 1.0, 0.5),
                                       (0.5, 1.0, 1.0, 1.0, 1.0),
                                       (0.5, 1.0, 1.0, 0.5, 1.0),
                                       (0.5, 1.0, 0.5, 1.0, 1.0)],
                     (0.25, 0.75, 0.75, 0.75, 0.25): [(0.5, 1.0, 1.0, 1.0, 0.0),
                                                      (0.5, 0.5, 0.5, 1.0, 0.5),
                                                      (0, 1, 1, 1, 0),
                                                      (0.5, 1.0, 0.5, 0.5, 0.5),
                                                      (0.5, 1.0, 1.0, 1.0, 0.5),
                                                      (0.0, 1.0, 0.5, 0.5, 0.5),
                                                      (0.0, 1.0, 1.0, 1.0, 0.5),
                                                      (0.5, 1.0, 0.5, 1.0, 0.5),
                                                      (0.0, 1.0, 0.5, 1.0, 0.5),
                                                      (0.5, 1.0, 1.0, 0.5, 0.5),
                                                      (0.0, 1.0, 1.0, 0.5, 0.5),
                                                      (0.0, 1.0, 1.0, 0.5, 0.0),
                                                      (0.0, 1.0, 0.5, 1.0, 0.0),
                                                      (0.5, 1.0, 1.0, 0.5, 0.0),
                                                      (0.5, 1.0, 0.5, 1.0, 0.0),
                                                      (0.5, 1.0, 0.5, 0.5, 0.0),
                                                      (0.0, 1.0, 0.5, 0.5, 0.0),
                                                      (0.5, 0.5, 1.0, 0.5, 0.0),
                                                      (0.5, 0.5, 0.5, 1.0, 0.0),
                                                      (0.0, 0.5, 1.0, 0.5, 0.5),
                                                      (0.0, 0.5, 0.5, 1.0, 0.5),
                                                      (0.0, 0.5, 1.0, 0.5, 0.0),
                                                      (0.0, 0.5, 1.0, 1.0, 0.5),
                                                      (0.5, 0.5, 1.0, 1.0, 0.0),
                                                      (0.0, 0.5, 0.5, 0.5, 0.5),
                                                      (0.5, 0.5, 0.5, 0.5, 0.0),
                                                      (0.0, 0.5, 0.5, 1.0, 0.0),
                                                      (0.0, 0.5, 0.5, 0.5, 0.0),
                                                      (0.0, 0.5, 1.0, 1.0, 0.0),
                                                      (0.5, 0.5, 0.5, 0.5, 0.5),
                                                      (0.5, 0.5, 1.0, 1.0, 0.5),
                                                      (
                                                      0.5, 0.5, 1.0, 0.5, 0.5)],
                     (0.0, 0.0, 1.0, 0.5, 1.0): [(0.5, 0.0, 0.5, 0.5, 1.0),
                                                 (0.0, 0.5, 0.5, 0.5, 1.0),
                                                 (0.5, 0.5, 0.5, 0.5, 1.0),
                                                 (0.0, 0.0, 0.5, 0.5, 1.0),
                                                 (0, 0, 1, 1, 1),
                                                 (0.5, 0.5, 1.0, 0.5, 1.0),
                                                 (0.5, 0.0, 1.0, 0.5, 1.0),
                                                 (0.0, 0.5, 1.0, 0.5, 1.0),
                                                 (0, 0, 1, 0, 1),
                                                 (0.5, 0.0, 1.0, 0.5, 0.5),
                                                 (0.0, 0.5, 1.0, 0.5, 0.5),
                                                 (0.5, 0.5, 1.0, 0.5, 0.5),
                                                 (0.0, 0.0, 1.0, 0.5, 0.5),
                                                 (0.5, 0.5, 0.5, 0.5, 0.5),
                                                 (0.0, 0.0, 0.5, 0.5, 0.5),
                                                 (0.25, 0.25, 0.75, 0.75, 0.75),
                                                 (0.5, 0.0, 0.5, 0.5, 0.5),
                                                 (0.0, 0.5, 0.5, 0.5, 0.5), (
                                                 0.25, 0.25, 0.75, 0.25, 0.75)]}

        init_triangulation(5, 1, check, nn_checks)


class TestRec(object):
    def test_1_1_2D_rec_init(self):  # TODO: REMOVE FUNC AFTER SPLIT
        """Test that the initial 2D cube has the correct coords"""
        check = [(-1.0, -2.0), (7.0, 6.0), (7.0, -2.0), (-1.0, 6.0), (3.0, 2.0)]
        nn_checks = {(-1.0, -2.0): [(7, -2), (3.0, 2.0), (-1, 6)],
                     (7.0, 6.0): [(7, -2), (3.0, 2.0), (-1, 6)],
                     (7.0, -2.0): [(7, 6), (3.0, 2.0), (-1, -2)]}
        init_triangulation(2, 0, check, nn_checks, bounds=[(-1, 7), (-2, 6)])

    def test_1_2_2D_rec_splits(self):
        """Test that the 2D cube subtriangulations has the correct coords"""
        check = [(3.0, -2.0), (7.0, -1.0), (7.0, -2.0), (3.0, -1.0),
                 (5.0, -1.5), (3.0, -1.5), (5.0, -2.0), (4.0, -1.75),
                 (7.0, -1.5), (5.0, -1.0), (6.0, -1.25), (6.0, -1.75),
                 (4.0, -1.25), (5.0, -1.75), (4.0, -1.5), (4.5, -1.625),
                 (3.0, -1.75), (4.0, -2.0), (3.5, -1.875), (3.5, -1.625),
                 (4.5, -1.875), (5.0, -1.25), (6.0, -1.5), (5.5, -1.375),
                 (7.0, -1.25), (6.0, -1.0), (6.5, -1.125), (6.5, -1.375),
                 (5.5, -1.125), (5.5, -1.625), (7.0, -1.75), (6.0, -2.0),
                 (6.5, -1.875), (6.5, -1.625), (5.5, -1.875), (4.5, -1.375),
                 (3.0, -1.25), (4.0, -1.0), (3.5, -1.125), (3.5, -1.375),
                 (4.5, -1.125)]
        nn_checks = {(3.0, -2.0): [(3.0, -1.75), (3.5, -1.875), (4.0, -2.0)],
                     (5.0, -1.75): [(5.0, -2.0), (5.0, -1.5), (5.5, -1.625),
                                    (5.5, -1.875), (4.5, -1.625), (6.0, -1.75),
                                    (4.5, -1.875), (4.0, -1.75)],
                     (6.0, -2.0): [(5.0, -2.0), (5.5, -1.875), (6.0, -1.75),
                                   (6.5, -1.875), (7, -2)],
                     (4.5, -1.125): [(5.0, -1.0), (4.0, -1.25), (5.0, -1.25),
                                     (4.0, -1.0)]}

        init_triangulation(2, 2, check, nn_checks, bounds=[(3, 7), (-2, -1)])

    def test_2_1_3D_rec_init(self):
        """Test that the initial 3D cube has the correct coords"""
        check = [(0.0, -20.0, 0.0), (4.0, -10.0, 1.0), (4.0, -20.0, 0.0),
                 (4.0, -10.0, 0.0), (4.0, -20.0, 1.0), (0.0, -10.0, 0.0),
                 (0.0, -10.0, 1.0), (0.0, -20.0, 1.0), (2.0, -15.0, 0.5)]
        nn_checks = {
            (4.0, -20.0, 0.0): [(4, -10, 1), (4, -10, 0), (2.0, -15.0, 0.5),
                                (0, -20, 0), (4, -20, 1)],
            (4.0, -10.0, 0.0): [(4, -10, 1), (4, -20, 0), (0, -10, 0),
                                (2.0, -15.0, 0.5), (0, -20, 0)],
            (4.0, -20.0, 1.0): [(4, -10, 1), (4, -20, 0), (0, -20, 1),
                                (2.0, -15.0, 0.5), (0, -20, 0)]}

        init_triangulation(3, 0, check, nn_checks, bounds=[(0, 4), (-20, -10), (0, 1)])

    def test_2_2_3D_rec_splits(self):
        """Test that the 3D cube subtriangulations has the correct coords"""
        check = [(-3.0, -2.0, 0.0), (4.0, 10.0, 1.0), (4.0, -2.0, 0.0),
                 (4.0, 10.0, 0.0), (4.0, -2.0, 1.0), (-3.0, 10.0, 0.0),
                 (-3.0, 10.0, 1.0), (-3.0, -2.0, 1.0), (0.5, 4.0, 0.5),
                 (-3.0, 4.0, 0.5), (-3.0, -2.0, 0.5), (-3.0, 4.0, 0.0),
                 (0.5, -2.0, 0.5), (0.5, -2.0, 0.0), (0.5, 4.0, 0.0),
                 (-1.25, 1.0, 0.25), (4.0, 4.0, 0.5), (4.0, 10.0, 0.5),
                 (4.0, 4.0, 1.0), (0.5, 10.0, 0.5), (0.5, 10.0, 1.0),
                 (0.5, 4.0, 1.0), (2.25, 7.0, 0.75), (4.0, -2.0, 0.5),
                 (4.0, 4.0, 0.0), (2.25, 1.0, 0.25), (0.5, 10.0, 0.0),
                 (2.25, 7.0, 0.25), (0.5, -2.0, 1.0), (2.25, 1.0, 0.75),
                 (-3.0, 10.0, 0.5), (-1.25, 7.0, 0.25), (-3.0, 4.0, 1.0),
                 (-1.25, 7.0, 0.75), (-1.25, 1.0, 0.75), (0.5, 1.0, 0.25),
                 (0.5, 4.0, 0.25), (0.5, 1.0, 0.5), (-1.25, 4.0, 0.25),
                 (-1.25, 4.0, 0.5), (-1.25, 1.0, 0.5), (-0.375, 2.5, 0.375),
                 (-3.0, 1.0, 0.25), (-3.0, -2.0, 0.25), (-3.0, 1.0, 0.0),
                 (-1.25, -2.0, 0.25), (-1.25, -2.0, 0.0), (-1.25, 1.0, 0.0),
                 (-2.125, -0.5, 0.125), (-3.0, 4.0, 0.25), (-3.0, 1.0, 0.5),
                 (-2.125, 2.5, 0.375), (-1.25, -2.0, 0.5),
                 (-2.125, -0.5, 0.375), (-1.25, 4.0, 0.0), (-2.125, 2.5, 0.125),
                 (0.5, -2.0, 0.25), (-0.375, -0.5, 0.375), (0.5, 1.0, 0.0),
                 (-0.375, -0.5, 0.125), (-0.375, 2.5, 0.125), (0.5, 7.0, 0.75),
                 (0.5, 4.0, 0.75), (0.5, 7.0, 0.5), (2.25, 4.0, 0.75),
                 (2.25, 4.0, 0.5), (2.25, 7.0, 0.5), (1.375, 5.5, 0.625),
                 (4.0, 7.0, 0.75), (4.0, 10.0, 0.75), (4.0, 7.0, 1.0),
                 (2.25, 10.0, 0.75), (2.25, 10.0, 1.0), (2.25, 7.0, 1.0),
                 (3.125, 8.5, 0.875), (4.0, 4.0, 0.75), (4.0, 7.0, 0.5),
                 (3.125, 5.5, 0.625), (2.25, 10.0, 0.5), (3.125, 8.5, 0.625),
                 (2.25, 4.0, 1.0), (3.125, 5.5, 0.875), (0.5, 10.0, 0.75),
                 (1.375, 8.5, 0.625), (0.5, 7.0, 1.0), (1.375, 8.5, 0.875),
                 (1.375, 5.5, 0.875), (2.25, 4.0, 0.25), (2.25, 1.0, 0.5),
                 (1.375, 2.5, 0.375), (4.0, 1.0, 0.25), (4.0, -2.0, 0.25),
                 (4.0, 1.0, 0.0), (2.25, -2.0, 0.25), (2.25, -2.0, 0.0),
                 (2.25, 1.0, 0.0), (3.125, -0.5, 0.125), (4.0, 4.0, 0.25),
                 (4.0, 1.0, 0.5), (3.125, 2.5, 0.375), (2.25, -2.0, 0.5),
                 (3.125, -0.5, 0.375), (2.25, 4.0, 0.0), (3.125, 2.5, 0.125),
                 (1.375, -0.5, 0.375), (1.375, -0.5, 0.125),
                 (1.375, 2.5, 0.125), (0.5, 7.0, 0.25), (1.375, 5.5, 0.375),
                 (4.0, 7.0, 0.25), (4.0, 10.0, 0.25), (4.0, 7.0, 0.0),
                 (2.25, 10.0, 0.25), (2.25, 10.0, 0.0), (2.25, 7.0, 0.0),
                 (3.125, 8.5, 0.125), (3.125, 5.5, 0.375), (3.125, 8.5, 0.375),
                 (3.125, 5.5, 0.125), (0.5, 10.0, 0.25), (1.375, 8.5, 0.375),
                 (0.5, 7.0, 0.0), (1.375, 8.5, 0.125), (1.375, 5.5, 0.125),
                 (0.5, 1.0, 0.75), (1.375, 2.5, 0.625), (4.0, 1.0, 0.75),
                 (4.0, -2.0, 0.75), (4.0, 1.0, 1.0), (2.25, -2.0, 0.75),
                 (2.25, -2.0, 1.0), (2.25, 1.0, 1.0), (3.125, -0.5, 0.875),
                 (3.125, 2.5, 0.625), (3.125, -0.5, 0.625), (3.125, 2.5, 0.875),
                 (0.5, -2.0, 0.75), (1.375, -0.5, 0.625), (0.5, 1.0, 1.0),
                 (1.375, -0.5, 0.875), (1.375, 2.5, 0.875), (-1.25, 7.0, 0.5),
                 (-0.375, 5.5, 0.375), (-3.0, 7.0, 0.25), (-3.0, 10.0, 0.25),
                 (-3.0, 7.0, 0.0), (-1.25, 10.0, 0.25), (-1.25, 10.0, 0.0),
                 (-1.25, 7.0, 0.0), (-2.125, 8.5, 0.125), (-3.0, 7.0, 0.5),
                 (-2.125, 5.5, 0.375), (-1.25, 10.0, 0.5), (-2.125, 8.5, 0.375),
                 (-2.125, 5.5, 0.125), (-0.375, 8.5, 0.375),
                 (-0.375, 8.5, 0.125), (-0.375, 5.5, 0.125), (-1.25, 4.0, 0.75),
                 (-0.375, 5.5, 0.625), (-3.0, 7.0, 0.75), (-3.0, 10.0, 0.75),
                 (-3.0, 7.0, 1.0), (-1.25, 10.0, 0.75), (-1.25, 10.0, 1.0),
                 (-1.25, 7.0, 1.0), (-2.125, 8.5, 0.875), (-3.0, 4.0, 0.75),
                 (-2.125, 5.5, 0.625), (-2.125, 8.5, 0.625), (-1.25, 4.0, 1.0),
                 (-2.125, 5.5, 0.875), (-0.375, 8.5, 0.625),
                 (-0.375, 8.5, 0.875), (-0.375, 5.5, 0.875),
                 (-0.375, 2.5, 0.625), (-3.0, 1.0, 0.75), (-3.0, -2.0, 0.75),
                 (-3.0, 1.0, 1.0), (-1.25, -2.0, 0.75), (-1.25, -2.0, 1.0),
                 (-1.25, 1.0, 1.0), (-2.125, -0.5, 0.875), (-2.125, 2.5, 0.625),
                 (-2.125, -0.5, 0.625), (-2.125, 2.5, 0.875),
                 (-0.375, -0.5, 0.625), (-0.375, -0.5, 0.875),
                 (-0.375, 2.5, 0.875)]
        nn_checks = {(2.25, 7.0, 0.75): [(4.0, 7.0, 0.75), (2.25, 7.0, 1.0),
                                         (4.0, 7.0, 0.5), (4.0, 7.0, 1.0),
                                         (4.0, 4.0, 0.75), (1.375, 5.5, 0.875),
                                         (2.25, 4.0, 1.0), (2.25, 4.0, 0.5),
                                         (2.25, 4.0, 0.75), (3.125, 8.5, 0.875),
                                         (3.125, 8.5, 0.625), (4.0, 10.0, 0.75),
                                         (2.25, 10.0, 1.0), (2.25, 10.0, 0.75),
                                         (2.25, 10.0, 0.5), (1.375, 8.5, 0.625),
                                         (1.375, 8.5, 0.875), (0.5, 7.0, 0.75),
                                         (0.5, 7.0, 0.5), (3.125, 5.5, 0.625),
                                         (3.125, 5.5, 0.875), (0.5, 10.0, 0.75),
                                         (0.5, 7.0, 1.0), (0.5, 4.0, 0.75),
                                         (2.25, 7.0, 0.5), (1.375, 5.5, 0.625)],
                     (4.0, -2.0, 0.5): [(4.0, -2.0, 0.75), (4.0, -2.0, 0.25),
                                        (2.25, 1.0, 0.5), (2.25, -2.0, 0.75),
                                        (2.25, -2.0, 0.5), (2.25, -2.0, 0.25),
                                        (4.0, 1.0, 0.25), (4.0, 1.0, 0.75),
                                        (4.0, 1.0, 0.5), (3.125, -0.5, 0.375),
                                        (3.125, -0.5, 0.625)],
                     (-2.125, -0.5, 0.875): [(-1.25, 1.0, 1.0),
                                             (-1.25, 1.0, 0.75),
                                             (-1.25, -2.0, 0.75),
                                             (-1.25, -2.0, 1.0),
                                             (-3.0, -2.0, 0.75),
                                             (-3.0, 1.0, 1.0), (-3, -2, 1),
                                             (-3.0, 1.0, 0.75)]}

        init_triangulation(3, 2, check, nn_checks, bounds=[(-3, 4), (-2, 10), (0, 1)])

    def test_3_1_4D_rec_init(self):
        """Test that the initial 4D cube has the correct coords"""
        check = [(-1.0, -15.0, 0.0, 3.0), (4.0, -10.0, 1.0, 5.0),
                 (4.0, -15.0, 0.0, 3.0), (4.0, -10.0, 0.0, 3.0),
                 (4.0, -10.0, 1.0, 3.0), (4.0, -10.0, 0.0, 5.0),
                 (4.0, -15.0, 1.0, 3.0), (4.0, -15.0, 1.0, 5.0),
                 (4.0, -15.0, 0.0, 5.0), (-1.0, -10.0, 0.0, 3.0),
                 (-1.0, -10.0, 1.0, 3.0), (-1.0, -10.0, 1.0, 5.0),
                 (-1.0, -10.0, 0.0, 5.0), (-1.0, -15.0, 1.0, 3.0),
                 (-1.0, -15.0, 1.0, 5.0), (-1.0, -15.0, 0.0, 5.0),
                 (1.5, -12.5, 0.5, 4.0)]
        nn_checks = {(4.0, -15.0, 1.0, 5.0): [(-1, -15, 1, 5), (4, -15, 0, 5),
                                              (-1, -15, 0, 3), (4, -15, 1, 3),
                                              (4, -10, 1, 5), (-1, -15, 0, 5),
                                              (4, -15, 0, 3), (-1, -15, 1, 3),
                                              (1.5, -12.5, 0.5, 4.0)],
                     (4.0, -15.0, 0.0, 5.0): [(4, -15, 1, 5), (4, -10, 0, 5),
                                              (-1, -15, 0, 3), (4, -10, 1, 5),
                                              (-1, -15, 0, 5), (4, -15, 0, 3),
                                              (1.5, -12.5, 0.5, 4.0)],
                     (1.5, -12.5, 0.5, 4.0): [(4, -15, 1, 5), (-1, -10, 0, 5),
                                              (4, -10, 0, 5), (-1, -15, 1, 5),
                                              (4, -10, 1, 3), (-1, -10, 1, 5),
                                              (4, -15, 0, 5), (-1, -15, 1, 3),
                                              (-1, -15, 0, 3), (4, -15, 1, 3),
                                              (-1, -10, 0, 3), (4, -10, 1, 5),
                                              (-1, -10, 1, 3), (-1, -15, 0, 5),
                                              (4, -15, 0, 3), (4, -10, 0, 3)]}

        init_triangulation(4, 0, check, nn_checks,
                           bounds=[(-1, 4), (-15, -10), (0, 1), (3, 5)])

    def test_3_2_4D_rec_splits(self):
        """Test that the 4D cube subtriangulations has the correct coords"""
        check = [(-2.0, 3.0, -1.0, 3.0), (9.0, 10.0, 1.0, 5.0),
                 (9.0, 3.0, -1.0, 3.0), (9.0, 10.0, -1.0, 3.0),
                 (9.0, 10.0, 1.0, 3.0), (9.0, 10.0, -1.0, 5.0),
                 (9.0, 3.0, 1.0, 3.0), (9.0, 3.0, 1.0, 5.0),
                 (9.0, 3.0, -1.0, 5.0), (-2.0, 10.0, -1.0, 3.0),
                 (-2.0, 10.0, 1.0, 3.0), (-2.0, 10.0, 1.0, 5.0),
                 (-2.0, 10.0, -1.0, 5.0), (-2.0, 3.0, 1.0, 3.0),
                 (-2.0, 3.0, 1.0, 5.0), (-2.0, 3.0, -1.0, 5.0),
                 (3.5, 6.5, 0.0, 4.0), (-2.0, 6.5, 0.0, 4.0),
                 (-2.0, 3.0, 0.0, 4.0), (-2.0, 3.0, -1.0, 4.0),
                 (-2.0, 3.0, 0.0, 3.0), (-2.0, 6.5, -1.0, 4.0),
                 (-2.0, 6.5, -1.0, 3.0), (-2.0, 6.5, 0.0, 3.0),
                 (3.5, 3.0, 0.0, 4.0), (3.5, 3.0, -1.0, 4.0),
                 (3.5, 3.0, -1.0, 3.0), (3.5, 3.0, 0.0, 3.0),
                 (3.5, 6.5, -1.0, 4.0), (3.5, 6.5, -1.0, 3.0),
                 (3.5, 6.5, 0.0, 3.0), (0.75, 4.75, -0.5, 3.5),
                 (9.0, 6.5, 0.0, 4.0), (9.0, 10.0, 0.0, 4.0),
                 (9.0, 10.0, 1.0, 4.0), (9.0, 10.0, 0.0, 5.0),
                 (9.0, 6.5, 1.0, 4.0), (9.0, 6.5, 1.0, 5.0),
                 (9.0, 6.5, 0.0, 5.0), (3.5, 10.0, 0.0, 4.0),
                 (3.5, 10.0, 1.0, 4.0), (3.5, 10.0, 1.0, 5.0),
                 (3.5, 10.0, 0.0, 5.0), (3.5, 6.5, 1.0, 4.0),
                 (3.5, 6.5, 1.0, 5.0), (3.5, 6.5, 0.0, 5.0),
                 (6.25, 8.25, 0.5, 4.5), (9.0, 3.0, 0.0, 4.0),
                 (9.0, 3.0, -1.0, 4.0), (9.0, 3.0, 0.0, 3.0),
                 (9.0, 6.5, -1.0, 4.0), (9.0, 6.5, -1.0, 3.0),
                 (9.0, 6.5, 0.0, 3.0), (6.25, 4.75, -0.5, 3.5),
                 (9.0, 10.0, -1.0, 4.0), (9.0, 10.0, 0.0, 3.0),
                 (3.5, 10.0, -1.0, 4.0), (3.5, 10.0, -1.0, 3.0),
                 (3.5, 10.0, 0.0, 3.0), (6.25, 8.25, -0.5, 3.5),
                 (9.0, 6.5, 1.0, 3.0), (3.5, 10.0, 1.0, 3.0),
                 (3.5, 6.5, 1.0, 3.0), (6.25, 8.25, 0.5, 3.5),
                 (9.0, 6.5, -1.0, 5.0), (3.5, 10.0, -1.0, 5.0),
                 (3.5, 6.5, -1.0, 5.0), (6.25, 8.25, -0.5, 4.5),
                 (9.0, 3.0, 1.0, 4.0), (3.5, 3.0, 1.0, 4.0),
                 (3.5, 3.0, 1.0, 3.0), (6.25, 4.75, 0.5, 3.5),
                 (9.0, 3.0, 0.0, 5.0), (3.5, 3.0, 1.0, 5.0),
                 (3.5, 3.0, 0.0, 5.0), (6.25, 4.75, 0.5, 4.5),
                 (3.5, 3.0, -1.0, 5.0), (6.25, 4.75, -0.5, 4.5),
                 (-2.0, 10.0, 0.0, 4.0), (-2.0, 10.0, -1.0, 4.0),
                 (-2.0, 10.0, 0.0, 3.0), (0.75, 8.25, -0.5, 3.5),
                 (-2.0, 10.0, 1.0, 4.0), (-2.0, 6.5, 1.0, 4.0),
                 (-2.0, 6.5, 1.0, 3.0), (0.75, 8.25, 0.5, 3.5),
                 (-2.0, 10.0, 0.0, 5.0), (-2.0, 6.5, 1.0, 5.0),
                 (-2.0, 6.5, 0.0, 5.0), (0.75, 8.25, 0.5, 4.5),
                 (-2.0, 6.5, -1.0, 5.0), (0.75, 8.25, -0.5, 4.5),
                 (-2.0, 3.0, 1.0, 4.0), (0.75, 4.75, 0.5, 3.5),
                 (-2.0, 3.0, 0.0, 5.0), (0.75, 4.75, 0.5, 4.5),
                 (0.75, 4.75, -0.5, 4.5), (3.5, 4.75, -0.5, 3.5),
                 (3.5, 6.5, -0.5, 3.5), (3.5, 6.5, 0.0, 3.5),
                 (3.5, 6.5, -0.5, 4.0), (3.5, 4.75, 0.0, 3.5),
                 (3.5, 4.75, 0.0, 4.0), (3.5, 4.75, -0.5, 4.0),
                 (0.75, 6.5, -0.5, 3.5), (0.75, 6.5, 0.0, 3.5),
                 (0.75, 6.5, 0.0, 4.0), (0.75, 6.5, -0.5, 4.0),
                 (0.75, 4.75, 0.0, 3.5), (0.75, 4.75, 0.0, 4.0),
                 (0.75, 4.75, -0.5, 4.0), (2.125, 5.625, -0.25, 3.75),
                 (-2.0, 4.75, -0.5, 3.5), (-2.0, 3.0, -0.5, 3.5),
                 (-2.0, 3.0, -1.0, 3.5), (-2.0, 3.0, -0.5, 3.0),
                 (-2.0, 4.75, -1.0, 3.5), (-2.0, 4.75, -1.0, 3.0),
                 (-2.0, 4.75, -0.5, 3.0), (0.75, 3.0, -0.5, 3.5),
                 (0.75, 3.0, -1.0, 3.5), (0.75, 3.0, -1.0, 3.0),
                 (0.75, 3.0, -0.5, 3.0), (0.75, 4.75, -1.0, 3.5),
                 (0.75, 4.75, -1.0, 3.0), (0.75, 4.75, -0.5, 3.0),
                 (-0.625, 3.875, -0.75, 3.25), (-2.0, 6.5, -0.5, 3.5),
                 (-2.0, 6.5, 0.0, 3.5), (-2.0, 6.5, -0.5, 4.0),
                 (-2.0, 4.75, 0.0, 3.5), (-2.0, 4.75, 0.0, 4.0),
                 (-2.0, 4.75, -0.5, 4.0), (-0.625, 5.625, -0.25, 3.75),
                 (-2.0, 3.0, 0.0, 3.5), (-2.0, 3.0, -0.5, 4.0),
                 (0.75, 3.0, 0.0, 3.5), (0.75, 3.0, 0.0, 4.0),
                 (0.75, 3.0, -0.5, 4.0), (-0.625, 3.875, -0.25, 3.75),
                 (-2.0, 4.75, -1.0, 4.0), (0.75, 3.0, -1.0, 4.0),
                 (0.75, 4.75, -1.0, 4.0), (-0.625, 3.875, -0.75, 3.75),
                 (-2.0, 4.75, 0.0, 3.0), (0.75, 3.0, 0.0, 3.0),
                 (0.75, 4.75, 0.0, 3.0), (-0.625, 3.875, -0.25, 3.25),
                 (-2.0, 6.5, -1.0, 3.5), (0.75, 6.5, -1.0, 3.5),
                 (0.75, 6.5, -1.0, 4.0), (-0.625, 5.625, -0.75, 3.75),
                 (-2.0, 6.5, -0.5, 3.0), (0.75, 6.5, -1.0, 3.0),
                 (0.75, 6.5, -0.5, 3.0), (-0.625, 5.625, -0.75, 3.25),
                 (0.75, 6.5, 0.0, 3.0), (-0.625, 5.625, -0.25, 3.25),
                 (3.5, 3.0, -0.5, 3.5), (3.5, 3.0, 0.0, 3.5),
                 (3.5, 3.0, -0.5, 4.0), (2.125, 3.875, -0.25, 3.75),
                 (3.5, 3.0, -1.0, 3.5), (3.5, 4.75, -1.0, 3.5),
                 (3.5, 4.75, -1.0, 4.0), (2.125, 3.875, -0.75, 3.75),
                 (3.5, 3.0, -0.5, 3.0), (3.5, 4.75, -1.0, 3.0),
                 (3.5, 4.75, -0.5, 3.0), (2.125, 3.875, -0.75, 3.25),
                 (3.5, 4.75, 0.0, 3.0), (2.125, 3.875, -0.25, 3.25),
                 (3.5, 6.5, -1.0, 3.5), (2.125, 5.625, -0.75, 3.75),
                 (3.5, 6.5, -0.5, 3.0), (2.125, 5.625, -0.75, 3.25),
                 (2.125, 5.625, -0.25, 3.25), (3.5, 8.25, 0.5, 4.5),
                 (3.5, 6.5, 0.5, 4.5), (3.5, 6.5, 0.0, 4.5),
                 (3.5, 6.5, 0.5, 4.0), (3.5, 8.25, 0.0, 4.5),
                 (3.5, 8.25, 0.0, 4.0), (3.5, 8.25, 0.5, 4.0),
                 (6.25, 6.5, 0.5, 4.5), (6.25, 6.5, 0.0, 4.5),
                 (6.25, 6.5, 0.0, 4.0), (6.25, 6.5, 0.5, 4.0),
                 (6.25, 8.25, 0.0, 4.5), (6.25, 8.25, 0.0, 4.0),
                 (6.25, 8.25, 0.5, 4.0), (4.875, 7.375, 0.25, 4.25),
                 (9.0, 8.25, 0.5, 4.5), (9.0, 10.0, 0.5, 4.5),
                 (9.0, 10.0, 1.0, 4.5), (9.0, 10.0, 0.5, 5.0),
                 (9.0, 8.25, 1.0, 4.5), (9.0, 8.25, 1.0, 5.0),
                 (9.0, 8.25, 0.5, 5.0), (6.25, 10.0, 0.5, 4.5),
                 (6.25, 10.0, 1.0, 4.5), (6.25, 10.0, 1.0, 5.0),
                 (6.25, 10.0, 0.5, 5.0), (6.25, 8.25, 1.0, 4.5),
                 (6.25, 8.25, 1.0, 5.0), (6.25, 8.25, 0.5, 5.0),
                 (7.625, 9.125, 0.75, 4.75), (9.0, 6.5, 0.5, 4.5),
                 (9.0, 6.5, 0.0, 4.5), (9.0, 6.5, 0.5, 4.0),
                 (9.0, 8.25, 0.0, 4.5), (9.0, 8.25, 0.0, 4.0),
                 (9.0, 8.25, 0.5, 4.0), (7.625, 7.375, 0.25, 4.25),
                 (9.0, 10.0, 0.0, 4.5), (9.0, 10.0, 0.5, 4.0),
                 (6.25, 10.0, 0.0, 4.5), (6.25, 10.0, 0.0, 4.0),
                 (6.25, 10.0, 0.5, 4.0), (7.625, 9.125, 0.25, 4.25),
                 (9.0, 8.25, 1.0, 4.0), (6.25, 10.0, 1.0, 4.0),
                 (6.25, 8.25, 1.0, 4.0), (7.625, 9.125, 0.75, 4.25),
                 (9.0, 8.25, 0.0, 5.0), (6.25, 10.0, 0.0, 5.0),
                 (6.25, 8.25, 0.0, 5.0), (7.625, 9.125, 0.25, 4.75),
                 (9.0, 6.5, 1.0, 4.5), (6.25, 6.5, 1.0, 4.5),
                 (6.25, 6.5, 1.0, 4.0), (7.625, 7.375, 0.75, 4.25),
                 (9.0, 6.5, 0.5, 5.0), (6.25, 6.5, 1.0, 5.0),
                 (6.25, 6.5, 0.5, 5.0), (7.625, 7.375, 0.75, 4.75),
                 (6.25, 6.5, 0.0, 5.0), (7.625, 7.375, 0.25, 4.75),
                 (3.5, 10.0, 0.5, 4.5), (3.5, 10.0, 0.0, 4.5),
                 (3.5, 10.0, 0.5, 4.0), (4.875, 9.125, 0.25, 4.25),
                 (3.5, 10.0, 1.0, 4.5), (3.5, 8.25, 1.0, 4.5),
                 (3.5, 8.25, 1.0, 4.0), (4.875, 9.125, 0.75, 4.25),
                 (3.5, 10.0, 0.5, 5.0), (3.5, 8.25, 1.0, 5.0),
                 (3.5, 8.25, 0.5, 5.0), (4.875, 9.125, 0.75, 4.75),
                 (3.5, 8.25, 0.0, 5.0), (4.875, 9.125, 0.25, 4.75),
                 (3.5, 6.5, 1.0, 4.5), (4.875, 7.375, 0.75, 4.25),
                 (3.5, 6.5, 0.5, 5.0), (4.875, 7.375, 0.75, 4.75),
                 (4.875, 7.375, 0.25, 4.75), (6.25, 6.5, -0.5, 3.5),
                 (6.25, 6.5, 0.0, 3.5), (6.25, 6.5, -0.5, 4.0),
                 (6.25, 4.75, 0.0, 3.5), (6.25, 4.75, 0.0, 4.0),
                 (6.25, 4.75, -0.5, 4.0), (4.875, 5.625, -0.25, 3.75),
                 (9.0, 4.75, -0.5, 3.5), (9.0, 3.0, -0.5, 3.5),
                 (9.0, 3.0, -1.0, 3.5), (9.0, 3.0, -0.5, 3.0),
                 (9.0, 4.75, -1.0, 3.5), (9.0, 4.75, -1.0, 3.0),
                 (9.0, 4.75, -0.5, 3.0), (6.25, 3.0, -0.5, 3.5),
                 (6.25, 3.0, -1.0, 3.5), (6.25, 3.0, -1.0, 3.0),
                 (6.25, 3.0, -0.5, 3.0), (6.25, 4.75, -1.0, 3.5),
                 (6.25, 4.75, -1.0, 3.0), (6.25, 4.75, -0.5, 3.0),
                 (7.625, 3.875, -0.75, 3.25), (9.0, 6.5, -0.5, 3.5),
                 (9.0, 6.5, 0.0, 3.5), (9.0, 6.5, -0.5, 4.0),
                 (9.0, 4.75, 0.0, 3.5), (9.0, 4.75, 0.0, 4.0),
                 (9.0, 4.75, -0.5, 4.0), (7.625, 5.625, -0.25, 3.75),
                 (9.0, 3.0, 0.0, 3.5), (9.0, 3.0, -0.5, 4.0),
                 (6.25, 3.0, 0.0, 3.5), (6.25, 3.0, 0.0, 4.0),
                 (6.25, 3.0, -0.5, 4.0), (7.625, 3.875, -0.25, 3.75),
                 (9.0, 4.75, -1.0, 4.0), (6.25, 3.0, -1.0, 4.0),
                 (6.25, 4.75, -1.0, 4.0), (7.625, 3.875, -0.75, 3.75),
                 (9.0, 4.75, 0.0, 3.0), (6.25, 3.0, 0.0, 3.0),
                 (6.25, 4.75, 0.0, 3.0), (7.625, 3.875, -0.25, 3.25),
                 (9.0, 6.5, -1.0, 3.5), (6.25, 6.5, -1.0, 3.5),
                 (6.25, 6.5, -1.0, 4.0), (7.625, 5.625, -0.75, 3.75),
                 (9.0, 6.5, -0.5, 3.0), (6.25, 6.5, -1.0, 3.0),
                 (6.25, 6.5, -0.5, 3.0), (7.625, 5.625, -0.75, 3.25),
                 (6.25, 6.5, 0.0, 3.0), (7.625, 5.625, -0.25, 3.25),
                 (4.875, 3.875, -0.25, 3.75), (4.875, 3.875, -0.75, 3.75),
                 (4.875, 3.875, -0.75, 3.25), (4.875, 3.875, -0.25, 3.25),
                 (4.875, 5.625, -0.75, 3.75), (4.875, 5.625, -0.75, 3.25),
                 (4.875, 5.625, -0.25, 3.25), (3.5, 8.25, -0.5, 3.5),
                 (3.5, 8.25, 0.0, 3.5), (3.5, 8.25, -0.5, 4.0),
                 (6.25, 8.25, 0.0, 3.5), (6.25, 8.25, -0.5, 4.0),
                 (4.875, 7.375, -0.25, 3.75), (9.0, 8.25, -0.5, 3.5),
                 (9.0, 10.0, -0.5, 3.5), (9.0, 10.0, -1.0, 3.5),
                 (9.0, 10.0, -0.5, 3.0), (9.0, 8.25, -1.0, 3.5),
                 (9.0, 8.25, -1.0, 3.0), (9.0, 8.25, -0.5, 3.0),
                 (6.25, 10.0, -0.5, 3.5), (6.25, 10.0, -1.0, 3.5),
                 (6.25, 10.0, -1.0, 3.0), (6.25, 10.0, -0.5, 3.0),
                 (6.25, 8.25, -1.0, 3.5), (6.25, 8.25, -1.0, 3.0),
                 (6.25, 8.25, -0.5, 3.0), (7.625, 9.125, -0.75, 3.25),
                 (9.0, 8.25, 0.0, 3.5), (9.0, 8.25, -0.5, 4.0),
                 (7.625, 7.375, -0.25, 3.75), (9.0, 10.0, 0.0, 3.5),
                 (9.0, 10.0, -0.5, 4.0), (6.25, 10.0, 0.0, 3.5),
                 (6.25, 10.0, -0.5, 4.0), (7.625, 9.125, -0.25, 3.75),
                 (9.0, 8.25, -1.0, 4.0), (6.25, 10.0, -1.0, 4.0),
                 (6.25, 8.25, -1.0, 4.0), (7.625, 9.125, -0.75, 3.75),
                 (9.0, 8.25, 0.0, 3.0), (6.25, 10.0, 0.0, 3.0),
                 (6.25, 8.25, 0.0, 3.0), (7.625, 9.125, -0.25, 3.25),
                 (7.625, 7.375, -0.75, 3.75), (7.625, 7.375, -0.75, 3.25),
                 (7.625, 7.375, -0.25, 3.25), (3.5, 10.0, -0.5, 3.5),
                 (3.5, 10.0, 0.0, 3.5), (3.5, 10.0, -0.5, 4.0),
                 (4.875, 9.125, -0.25, 3.75), (3.5, 10.0, -1.0, 3.5),
                 (3.5, 8.25, -1.0, 3.5), (3.5, 8.25, -1.0, 4.0),
                 (4.875, 9.125, -0.75, 3.75), (3.5, 10.0, -0.5, 3.0),
                 (3.5, 8.25, -1.0, 3.0), (3.5, 8.25, -0.5, 3.0),
                 (4.875, 9.125, -0.75, 3.25), (3.5, 8.25, 0.0, 3.0),
                 (4.875, 9.125, -0.25, 3.25), (4.875, 7.375, -0.75, 3.75),
                 (4.875, 7.375, -0.75, 3.25), (4.875, 7.375, -0.25, 3.25),
                 (3.5, 8.25, 0.5, 3.5), (3.5, 6.5, 0.5, 3.5),
                 (6.25, 6.5, 0.5, 3.5), (4.875, 7.375, 0.25, 3.75),
                 (9.0, 8.25, 0.5, 3.5), (9.0, 10.0, 0.5, 3.5),
                 (9.0, 10.0, 1.0, 3.5), (9.0, 10.0, 0.5, 3.0),
                 (9.0, 8.25, 1.0, 3.5), (9.0, 8.25, 1.0, 3.0),
                 (9.0, 8.25, 0.5, 3.0), (6.25, 10.0, 0.5, 3.5),
                 (6.25, 10.0, 1.0, 3.5), (6.25, 10.0, 1.0, 3.0),
                 (6.25, 10.0, 0.5, 3.0), (6.25, 8.25, 1.0, 3.5),
                 (6.25, 8.25, 1.0, 3.0), (6.25, 8.25, 0.5, 3.0),
                 (7.625, 9.125, 0.75, 3.25), (9.0, 6.5, 0.5, 3.5),
                 (7.625, 7.375, 0.25, 3.75), (7.625, 9.125, 0.25, 3.75),
                 (7.625, 9.125, 0.75, 3.75), (7.625, 9.125, 0.25, 3.25),
                 (9.0, 6.5, 1.0, 3.5), (6.25, 6.5, 1.0, 3.5),
                 (7.625, 7.375, 0.75, 3.75), (9.0, 6.5, 0.5, 3.0),
                 (6.25, 6.5, 1.0, 3.0), (6.25, 6.5, 0.5, 3.0),
                 (7.625, 7.375, 0.75, 3.25), (7.625, 7.375, 0.25, 3.25),
                 (3.5, 10.0, 0.5, 3.5), (4.875, 9.125, 0.25, 3.75),
                 (3.5, 10.0, 1.0, 3.5), (3.5, 8.25, 1.0, 3.5),
                 (4.875, 9.125, 0.75, 3.75), (3.5, 10.0, 0.5, 3.0),
                 (3.5, 8.25, 1.0, 3.0), (3.5, 8.25, 0.5, 3.0),
                 (4.875, 9.125, 0.75, 3.25), (4.875, 9.125, 0.25, 3.25),
                 (3.5, 6.5, 1.0, 3.5), (4.875, 7.375, 0.75, 3.75),
                 (3.5, 6.5, 0.5, 3.0), (4.875, 7.375, 0.75, 3.25),
                 (4.875, 7.375, 0.25, 3.25), (3.5, 8.25, -0.5, 4.5),
                 (3.5, 6.5, -0.5, 4.5), (6.25, 6.5, -0.5, 4.5),
                 (4.875, 7.375, -0.25, 4.25), (9.0, 8.25, -0.5, 4.5),
                 (9.0, 10.0, -0.5, 4.5), (9.0, 10.0, -1.0, 4.5),
                 (9.0, 10.0, -0.5, 5.0), (9.0, 8.25, -1.0, 4.5),
                 (9.0, 8.25, -1.0, 5.0), (9.0, 8.25, -0.5, 5.0),
                 (6.25, 10.0, -0.5, 4.5), (6.25, 10.0, -1.0, 4.5),
                 (6.25, 10.0, -1.0, 5.0), (6.25, 10.0, -0.5, 5.0),
                 (6.25, 8.25, -1.0, 4.5), (6.25, 8.25, -1.0, 5.0),
                 (6.25, 8.25, -0.5, 5.0), (7.625, 9.125, -0.75, 4.75),
                 (9.0, 6.5, -0.5, 4.5), (7.625, 7.375, -0.25, 4.25),
                 (7.625, 9.125, -0.25, 4.25), (7.625, 9.125, -0.75, 4.25),
                 (7.625, 9.125, -0.25, 4.75), (9.0, 6.5, -1.0, 4.5),
                 (6.25, 6.5, -1.0, 4.5), (7.625, 7.375, -0.75, 4.25),
                 (9.0, 6.5, -0.5, 5.0), (6.25, 6.5, -1.0, 5.0),
                 (6.25, 6.5, -0.5, 5.0), (7.625, 7.375, -0.75, 4.75),
                 (7.625, 7.375, -0.25, 4.75), (3.5, 10.0, -0.5, 4.5),
                 (4.875, 9.125, -0.25, 4.25), (3.5, 10.0, -1.0, 4.5),
                 (3.5, 8.25, -1.0, 4.5), (4.875, 9.125, -0.75, 4.25),
                 (3.5, 10.0, -0.5, 5.0), (3.5, 8.25, -1.0, 5.0),
                 (3.5, 8.25, -0.5, 5.0), (4.875, 9.125, -0.75, 4.75),
                 (4.875, 9.125, -0.25, 4.75), (3.5, 6.5, -1.0, 4.5),
                 (4.875, 7.375, -0.75, 4.25), (3.5, 6.5, -0.5, 5.0),
                 (4.875, 7.375, -0.75, 4.75), (4.875, 7.375, -0.25, 4.75),
                 (3.5, 4.75, 0.5, 3.5), (3.5, 4.75, 0.5, 4.0),
                 (6.25, 4.75, 0.5, 4.0), (4.875, 5.625, 0.25, 3.75),
                 (9.0, 4.75, 0.5, 3.5), (9.0, 3.0, 0.5, 3.5),
                 (9.0, 3.0, 1.0, 3.5), (9.0, 3.0, 0.5, 3.0),
                 (9.0, 4.75, 1.0, 3.5), (9.0, 4.75, 1.0, 3.0),
                 (9.0, 4.75, 0.5, 3.0), (6.25, 3.0, 0.5, 3.5),
                 (6.25, 3.0, 1.0, 3.5), (6.25, 3.0, 1.0, 3.0),
                 (6.25, 3.0, 0.5, 3.0), (6.25, 4.75, 1.0, 3.5),
                 (6.25, 4.75, 1.0, 3.0), (6.25, 4.75, 0.5, 3.0),
                 (7.625, 3.875, 0.75, 3.25), (9.0, 4.75, 0.5, 4.0),
                 (7.625, 5.625, 0.25, 3.75), (9.0, 3.0, 0.5, 4.0),
                 (6.25, 3.0, 0.5, 4.0), (7.625, 3.875, 0.25, 3.75),
                 (9.0, 4.75, 1.0, 4.0), (6.25, 3.0, 1.0, 4.0),
                 (6.25, 4.75, 1.0, 4.0), (7.625, 3.875, 0.75, 3.75),
                 (7.625, 3.875, 0.25, 3.25), (7.625, 5.625, 0.75, 3.75),
                 (7.625, 5.625, 0.75, 3.25), (7.625, 5.625, 0.25, 3.25),
                 (3.5, 3.0, 0.5, 3.5), (3.5, 3.0, 0.5, 4.0),
                 (4.875, 3.875, 0.25, 3.75), (3.5, 3.0, 1.0, 3.5),
                 (3.5, 4.75, 1.0, 3.5), (3.5, 4.75, 1.0, 4.0),
                 (4.875, 3.875, 0.75, 3.75), (3.5, 3.0, 0.5, 3.0),
                 (3.5, 4.75, 1.0, 3.0), (3.5, 4.75, 0.5, 3.0),
                 (4.875, 3.875, 0.75, 3.25), (4.875, 3.875, 0.25, 3.25),
                 (4.875, 5.625, 0.75, 3.75), (4.875, 5.625, 0.75, 3.25),
                 (4.875, 5.625, 0.25, 3.25), (3.5, 4.75, 0.5, 4.5),
                 (3.5, 4.75, 0.0, 4.5), (6.25, 4.75, 0.0, 4.5),
                 (4.875, 5.625, 0.25, 4.25), (9.0, 4.75, 0.5, 4.5),
                 (9.0, 3.0, 0.5, 4.5), (9.0, 3.0, 1.0, 4.5),
                 (9.0, 3.0, 0.5, 5.0), (9.0, 4.75, 1.0, 4.5),
                 (9.0, 4.75, 1.0, 5.0), (9.0, 4.75, 0.5, 5.0),
                 (6.25, 3.0, 0.5, 4.5), (6.25, 3.0, 1.0, 4.5),
                 (6.25, 3.0, 1.0, 5.0), (6.25, 3.0, 0.5, 5.0),
                 (6.25, 4.75, 1.0, 4.5), (6.25, 4.75, 1.0, 5.0),
                 (6.25, 4.75, 0.5, 5.0), (7.625, 3.875, 0.75, 4.75),
                 (9.0, 4.75, 0.0, 4.5), (7.625, 5.625, 0.25, 4.25),
                 (9.0, 3.0, 0.0, 4.5), (6.25, 3.0, 0.0, 4.5),
                 (7.625, 3.875, 0.25, 4.25), (7.625, 3.875, 0.75, 4.25),
                 (9.0, 4.75, 0.0, 5.0), (6.25, 3.0, 0.0, 5.0),
                 (6.25, 4.75, 0.0, 5.0), (7.625, 3.875, 0.25, 4.75),
                 (7.625, 5.625, 0.75, 4.25), (7.625, 5.625, 0.75, 4.75),
                 (7.625, 5.625, 0.25, 4.75), (3.5, 3.0, 0.5, 4.5),
                 (3.5, 3.0, 0.0, 4.5), (4.875, 3.875, 0.25, 4.25),
                 (3.5, 3.0, 1.0, 4.5), (3.5, 4.75, 1.0, 4.5),
                 (4.875, 3.875, 0.75, 4.25), (3.5, 3.0, 0.5, 5.0),
                 (3.5, 4.75, 1.0, 5.0), (3.5, 4.75, 0.5, 5.0),
                 (4.875, 3.875, 0.75, 4.75), (3.5, 4.75, 0.0, 5.0),
                 (4.875, 3.875, 0.25, 4.75), (4.875, 5.625, 0.75, 4.25),
                 (4.875, 5.625, 0.75, 4.75), (4.875, 5.625, 0.25, 4.75),
                 (3.5, 4.75, -0.5, 4.5), (4.875, 5.625, -0.25, 4.25),
                 (9.0, 4.75, -0.5, 4.5), (9.0, 3.0, -0.5, 4.5),
                 (9.0, 3.0, -1.0, 4.5), (9.0, 3.0, -0.5, 5.0),
                 (9.0, 4.75, -1.0, 4.5), (9.0, 4.75, -1.0, 5.0),
                 (9.0, 4.75, -0.5, 5.0), (6.25, 3.0, -0.5, 4.5),
                 (6.25, 3.0, -1.0, 4.5), (6.25, 3.0, -1.0, 5.0),
                 (6.25, 3.0, -0.5, 5.0), (6.25, 4.75, -1.0, 4.5),
                 (6.25, 4.75, -1.0, 5.0), (6.25, 4.75, -0.5, 5.0),
                 (7.625, 3.875, -0.75, 4.75), (7.625, 5.625, -0.25, 4.25),
                 (7.625, 3.875, -0.25, 4.25), (7.625, 3.875, -0.75, 4.25),
                 (7.625, 3.875, -0.25, 4.75), (7.625, 5.625, -0.75, 4.25),
                 (7.625, 5.625, -0.75, 4.75), (7.625, 5.625, -0.25, 4.75),
                 (3.5, 3.0, -0.5, 4.5), (4.875, 3.875, -0.25, 4.25),
                 (3.5, 3.0, -1.0, 4.5), (3.5, 4.75, -1.0, 4.5),
                 (4.875, 3.875, -0.75, 4.25), (3.5, 3.0, -0.5, 5.0),
                 (3.5, 4.75, -1.0, 5.0), (3.5, 4.75, -0.5, 5.0),
                 (4.875, 3.875, -0.75, 4.75), (4.875, 3.875, -0.25, 4.75),
                 (4.875, 5.625, -0.75, 4.25), (4.875, 5.625, -0.75, 4.75),
                 (4.875, 5.625, -0.25, 4.75), (0.75, 8.25, 0.0, 3.5),
                 (0.75, 8.25, 0.0, 4.0), (0.75, 8.25, -0.5, 4.0),
                 (2.125, 7.375, -0.25, 3.75), (-2.0, 8.25, -0.5, 3.5),
                 (-2.0, 10.0, -0.5, 3.5), (-2.0, 10.0, -1.0, 3.5),
                 (-2.0, 10.0, -0.5, 3.0), (-2.0, 8.25, -1.0, 3.5),
                 (-2.0, 8.25, -1.0, 3.0), (-2.0, 8.25, -0.5, 3.0),
                 (0.75, 10.0, -0.5, 3.5), (0.75, 10.0, -1.0, 3.5),
                 (0.75, 10.0, -1.0, 3.0), (0.75, 10.0, -0.5, 3.0),
                 (0.75, 8.25, -1.0, 3.5), (0.75, 8.25, -1.0, 3.0),
                 (0.75, 8.25, -0.5, 3.0), (-0.625, 9.125, -0.75, 3.25),
                 (-2.0, 8.25, 0.0, 3.5), (-2.0, 8.25, 0.0, 4.0),
                 (-2.0, 8.25, -0.5, 4.0), (-0.625, 7.375, -0.25, 3.75),
                 (-2.0, 10.0, 0.0, 3.5), (-2.0, 10.0, -0.5, 4.0),
                 (0.75, 10.0, 0.0, 3.5), (0.75, 10.0, 0.0, 4.0),
                 (0.75, 10.0, -0.5, 4.0), (-0.625, 9.125, -0.25, 3.75),
                 (-2.0, 8.25, -1.0, 4.0), (0.75, 10.0, -1.0, 4.0),
                 (0.75, 8.25, -1.0, 4.0), (-0.625, 9.125, -0.75, 3.75),
                 (-2.0, 8.25, 0.0, 3.0), (0.75, 10.0, 0.0, 3.0),
                 (0.75, 8.25, 0.0, 3.0), (-0.625, 9.125, -0.25, 3.25),
                 (-0.625, 7.375, -0.75, 3.75), (-0.625, 7.375, -0.75, 3.25),
                 (-0.625, 7.375, -0.25, 3.25), (2.125, 9.125, -0.25, 3.75),
                 (2.125, 9.125, -0.75, 3.75), (2.125, 9.125, -0.75, 3.25),
                 (2.125, 9.125, -0.25, 3.25), (2.125, 7.375, -0.75, 3.75),
                 (2.125, 7.375, -0.75, 3.25), (2.125, 7.375, -0.25, 3.25),
                 (0.75, 6.5, 0.5, 3.5), (0.75, 6.5, 0.5, 4.0),
                 (0.75, 8.25, 0.5, 4.0), (2.125, 7.375, 0.25, 3.75),
                 (-2.0, 8.25, 0.5, 3.5), (-2.0, 10.0, 0.5, 3.5),
                 (-2.0, 10.0, 1.0, 3.5), (-2.0, 10.0, 0.5, 3.0),
                 (-2.0, 8.25, 1.0, 3.5), (-2.0, 8.25, 1.0, 3.0),
                 (-2.0, 8.25, 0.5, 3.0), (0.75, 10.0, 0.5, 3.5),
                 (0.75, 10.0, 1.0, 3.5), (0.75, 10.0, 1.0, 3.0),
                 (0.75, 10.0, 0.5, 3.0), (0.75, 8.25, 1.0, 3.5),
                 (0.75, 8.25, 1.0, 3.0), (0.75, 8.25, 0.5, 3.0),
                 (-0.625, 9.125, 0.75, 3.25), (-2.0, 6.5, 0.5, 3.5),
                 (-2.0, 6.5, 0.5, 4.0), (-2.0, 8.25, 0.5, 4.0),
                 (-0.625, 7.375, 0.25, 3.75), (-2.0, 10.0, 0.5, 4.0),
                 (0.75, 10.0, 0.5, 4.0), (-0.625, 9.125, 0.25, 3.75),
                 (-2.0, 8.25, 1.0, 4.0), (0.75, 10.0, 1.0, 4.0),
                 (0.75, 8.25, 1.0, 4.0), (-0.625, 9.125, 0.75, 3.75),
                 (-0.625, 9.125, 0.25, 3.25), (-2.0, 6.5, 1.0, 3.5),
                 (0.75, 6.5, 1.0, 3.5), (0.75, 6.5, 1.0, 4.0),
                 (-0.625, 7.375, 0.75, 3.75), (-2.0, 6.5, 0.5, 3.0),
                 (0.75, 6.5, 1.0, 3.0), (0.75, 6.5, 0.5, 3.0),
                 (-0.625, 7.375, 0.75, 3.25), (-0.625, 7.375, 0.25, 3.25),
                 (2.125, 9.125, 0.25, 3.75), (2.125, 9.125, 0.75, 3.75),
                 (2.125, 9.125, 0.75, 3.25), (2.125, 9.125, 0.25, 3.25),
                 (2.125, 7.375, 0.75, 3.75), (2.125, 7.375, 0.75, 3.25),
                 (2.125, 7.375, 0.25, 3.25), (0.75, 6.5, 0.5, 4.5),
                 (0.75, 6.5, 0.0, 4.5), (0.75, 8.25, 0.0, 4.5),
                 (2.125, 7.375, 0.25, 4.25), (-2.0, 8.25, 0.5, 4.5),
                 (-2.0, 10.0, 0.5, 4.5), (-2.0, 10.0, 1.0, 4.5),
                 (-2.0, 10.0, 0.5, 5.0), (-2.0, 8.25, 1.0, 4.5),
                 (-2.0, 8.25, 1.0, 5.0), (-2.0, 8.25, 0.5, 5.0),
                 (0.75, 10.0, 0.5, 4.5), (0.75, 10.0, 1.0, 4.5),
                 (0.75, 10.0, 1.0, 5.0), (0.75, 10.0, 0.5, 5.0),
                 (0.75, 8.25, 1.0, 4.5), (0.75, 8.25, 1.0, 5.0),
                 (0.75, 8.25, 0.5, 5.0), (-0.625, 9.125, 0.75, 4.75),
                 (-2.0, 6.5, 0.5, 4.5), (-2.0, 6.5, 0.0, 4.5),
                 (-2.0, 8.25, 0.0, 4.5), (-0.625, 7.375, 0.25, 4.25),
                 (-2.0, 10.0, 0.0, 4.5), (0.75, 10.0, 0.0, 4.5),
                 (-0.625, 9.125, 0.25, 4.25), (-0.625, 9.125, 0.75, 4.25),
                 (-2.0, 8.25, 0.0, 5.0), (0.75, 10.0, 0.0, 5.0),
                 (0.75, 8.25, 0.0, 5.0), (-0.625, 9.125, 0.25, 4.75),
                 (-2.0, 6.5, 1.0, 4.5), (0.75, 6.5, 1.0, 4.5),
                 (-0.625, 7.375, 0.75, 4.25), (-2.0, 6.5, 0.5, 5.0),
                 (0.75, 6.5, 1.0, 5.0), (0.75, 6.5, 0.5, 5.0),
                 (-0.625, 7.375, 0.75, 4.75), (0.75, 6.5, 0.0, 5.0),
                 (-0.625, 7.375, 0.25, 4.75), (2.125, 9.125, 0.25, 4.25),
                 (2.125, 9.125, 0.75, 4.25), (2.125, 9.125, 0.75, 4.75),
                 (2.125, 9.125, 0.25, 4.75), (2.125, 7.375, 0.75, 4.25),
                 (2.125, 7.375, 0.75, 4.75), (2.125, 7.375, 0.25, 4.75),
                 (0.75, 6.5, -0.5, 4.5), (2.125, 7.375, -0.25, 4.25),
                 (-2.0, 8.25, -0.5, 4.5), (-2.0, 10.0, -0.5, 4.5),
                 (-2.0, 10.0, -1.0, 4.5), (-2.0, 10.0, -0.5, 5.0),
                 (-2.0, 8.25, -1.0, 4.5), (-2.0, 8.25, -1.0, 5.0),
                 (-2.0, 8.25, -0.5, 5.0), (0.75, 10.0, -0.5, 4.5),
                 (0.75, 10.0, -1.0, 4.5), (0.75, 10.0, -1.0, 5.0),
                 (0.75, 10.0, -0.5, 5.0), (0.75, 8.25, -1.0, 4.5),
                 (0.75, 8.25, -1.0, 5.0), (0.75, 8.25, -0.5, 5.0),
                 (-0.625, 9.125, -0.75, 4.75), (-2.0, 6.5, -0.5, 4.5),
                 (-0.625, 7.375, -0.25, 4.25), (-0.625, 9.125, -0.25, 4.25),
                 (-0.625, 9.125, -0.75, 4.25), (-0.625, 9.125, -0.25, 4.75),
                 (-2.0, 6.5, -1.0, 4.5), (0.75, 6.5, -1.0, 4.5),
                 (-0.625, 7.375, -0.75, 4.25), (-2.0, 6.5, -0.5, 5.0),
                 (0.75, 6.5, -1.0, 5.0), (0.75, 6.5, -0.5, 5.0),
                 (-0.625, 7.375, -0.75, 4.75), (-0.625, 7.375, -0.25, 4.75),
                 (2.125, 9.125, -0.25, 4.25), (2.125, 9.125, -0.75, 4.25),
                 (2.125, 9.125, -0.75, 4.75), (2.125, 9.125, -0.25, 4.75),
                 (2.125, 7.375, -0.75, 4.25), (2.125, 7.375, -0.75, 4.75),
                 (2.125, 7.375, -0.25, 4.75), (0.75, 4.75, 0.5, 4.0),
                 (2.125, 5.625, 0.25, 3.75), (-2.0, 4.75, 0.5, 3.5),
                 (-2.0, 3.0, 0.5, 3.5), (-2.0, 3.0, 1.0, 3.5),
                 (-2.0, 3.0, 0.5, 3.0), (-2.0, 4.75, 1.0, 3.5),
                 (-2.0, 4.75, 1.0, 3.0), (-2.0, 4.75, 0.5, 3.0),
                 (0.75, 3.0, 0.5, 3.5), (0.75, 3.0, 1.0, 3.5),
                 (0.75, 3.0, 1.0, 3.0), (0.75, 3.0, 0.5, 3.0),
                 (0.75, 4.75, 1.0, 3.5), (0.75, 4.75, 1.0, 3.0),
                 (0.75, 4.75, 0.5, 3.0), (-0.625, 3.875, 0.75, 3.25),
                 (-2.0, 4.75, 0.5, 4.0), (-0.625, 5.625, 0.25, 3.75),
                 (-2.0, 3.0, 0.5, 4.0), (0.75, 3.0, 0.5, 4.0),
                 (-0.625, 3.875, 0.25, 3.75), (-2.0, 4.75, 1.0, 4.0),
                 (0.75, 3.0, 1.0, 4.0), (0.75, 4.75, 1.0, 4.0),
                 (-0.625, 3.875, 0.75, 3.75), (-0.625, 3.875, 0.25, 3.25),
                 (-0.625, 5.625, 0.75, 3.75), (-0.625, 5.625, 0.75, 3.25),
                 (-0.625, 5.625, 0.25, 3.25), (2.125, 3.875, 0.25, 3.75),
                 (2.125, 3.875, 0.75, 3.75), (2.125, 3.875, 0.75, 3.25),
                 (2.125, 3.875, 0.25, 3.25), (2.125, 5.625, 0.75, 3.75),
                 (2.125, 5.625, 0.75, 3.25), (2.125, 5.625, 0.25, 3.25),
                 (0.75, 4.75, 0.0, 4.5), (2.125, 5.625, 0.25, 4.25),
                 (-2.0, 4.75, 0.5, 4.5), (-2.0, 3.0, 0.5, 4.5),
                 (-2.0, 3.0, 1.0, 4.5), (-2.0, 3.0, 0.5, 5.0),
                 (-2.0, 4.75, 1.0, 4.5), (-2.0, 4.75, 1.0, 5.0),
                 (-2.0, 4.75, 0.5, 5.0), (0.75, 3.0, 0.5, 4.5),
                 (0.75, 3.0, 1.0, 4.5), (0.75, 3.0, 1.0, 5.0),
                 (0.75, 3.0, 0.5, 5.0), (0.75, 4.75, 1.0, 4.5),
                 (0.75, 4.75, 1.0, 5.0), (0.75, 4.75, 0.5, 5.0),
                 (-0.625, 3.875, 0.75, 4.75), (-2.0, 4.75, 0.0, 4.5),
                 (-0.625, 5.625, 0.25, 4.25), (-2.0, 3.0, 0.0, 4.5),
                 (0.75, 3.0, 0.0, 4.5), (-0.625, 3.875, 0.25, 4.25),
                 (-0.625, 3.875, 0.75, 4.25), (-2.0, 4.75, 0.0, 5.0),
                 (0.75, 3.0, 0.0, 5.0), (0.75, 4.75, 0.0, 5.0),
                 (-0.625, 3.875, 0.25, 4.75), (-0.625, 5.625, 0.75, 4.25),
                 (-0.625, 5.625, 0.75, 4.75), (-0.625, 5.625, 0.25, 4.75),
                 (2.125, 3.875, 0.25, 4.25), (2.125, 3.875, 0.75, 4.25),
                 (2.125, 3.875, 0.75, 4.75), (2.125, 3.875, 0.25, 4.75),
                 (2.125, 5.625, 0.75, 4.25), (2.125, 5.625, 0.75, 4.75),
                 (2.125, 5.625, 0.25, 4.75), (2.125, 5.625, -0.25, 4.25),
                 (-2.0, 4.75, -0.5, 4.5), (-2.0, 3.0, -0.5, 4.5),
                 (-2.0, 3.0, -1.0, 4.5), (-2.0, 3.0, -0.5, 5.0),
                 (-2.0, 4.75, -1.0, 4.5), (-2.0, 4.75, -1.0, 5.0),
                 (-2.0, 4.75, -0.5, 5.0), (0.75, 3.0, -0.5, 4.5),
                 (0.75, 3.0, -1.0, 4.5), (0.75, 3.0, -1.0, 5.0),
                 (0.75, 3.0, -0.5, 5.0), (0.75, 4.75, -1.0, 4.5),
                 (0.75, 4.75, -1.0, 5.0), (0.75, 4.75, -0.5, 5.0),
                 (-0.625, 3.875, -0.75, 4.75), (-0.625, 5.625, -0.25, 4.25),
                 (-0.625, 3.875, -0.25, 4.25), (-0.625, 3.875, -0.75, 4.25),
                 (-0.625, 3.875, -0.25, 4.75), (-0.625, 5.625, -0.75, 4.25),
                 (-0.625, 5.625, -0.75, 4.75), (-0.625, 5.625, -0.25, 4.75),
                 (2.125, 3.875, -0.25, 4.25), (2.125, 3.875, -0.75, 4.25),
                 (2.125, 3.875, -0.75, 4.75), (2.125, 3.875, -0.25, 4.75),
                 (2.125, 5.625, -0.75, 4.25), (2.125, 5.625, -0.75, 4.75),
                 (2.125, 5.625, -0.25, 4.75)]
        nn_checks = {(0.75, 3.0, -0.5, 4.0): [(0.75, 4.75, -0.5, 4.0),
                                              (0.75, 4.75, -0.5, 4.5),
                                              (2.125, 3.875, -0.25, 3.75),
                                              (2.125, 3.875, -0.75, 3.75),
                                              (2.125, 3.875, -0.25, 4.25),
                                              (2.125, 3.875, -0.75, 4.25),
                                              (3.5, 3.0, 0.0, 4.0),
                                              (3.5, 3.0, -0.5, 4.0),
                                              (0.75, 3.0, 0.0, 4.0),
                                              (0.75, 3.0, -0.5, 4.5),
                                              (-2.0, 3.0, -0.5, 4.0),
                                              (-2.0, 3.0, 0.0, 4.0),
                                              (-0.625, 3.875, -0.25, 4.25),
                                              (-0.625, 3.875, -0.75, 4.25),
                                              (-0.625, 3.875, -0.75, 3.75),
                                              (0.75, 3.0, -0.5, 3.5),
                                              (-2.0, 3.0, -1.0, 4.0),
                                              (0.75, 3.0, -1.0, 4.0),
                                              (3.5, 3.0, -1.0, 4.0),
                                              (0.75, 4.75, -0.5, 3.5),
                                              (-0.625, 3.875, -0.25, 3.75)],
                     (-2.0, 3.0, -1.0, 3.0): [(-0.625, 3.875, -0.75, 3.25),
                                              (0.75, 3.0, -0.5, 3.0),
                                              (-2.0, 4.75, -1.0, 3.0),
                                              (-2.0, 4.75, -1.0, 3.5),
                                              (0.75, 3.0, -1.0, 3.0),
                                              (0.75, 4.75, -1.0, 3.5),
                                              (0.75, 3.0, -1.0, 3.5),
                                              (0.75, 4.75, -1.0, 3.0),
                                              (-2.0, 3.0, -0.5, 3.0),
                                              (-2.0, 3.0, -0.5, 3.5),
                                              (0.75, 4.75, -0.5, 3.0),
                                              (-2.0, 3.0, -1.0, 3.5),
                                              (-2.0, 4.75, -0.5, 3.5),
                                              (-2.0, 4.75, -0.5, 3.0),
                                              (0.75, 3.0, -0.5, 3.5)],
                     (-0.625, 5.625, -0.75, 4.25): [(0.75, 4.75, -0.5, 4.0),
                                                    (0.75, 4.75, -0.5, 4.5),
                                                    (-2.0, 6.5, -1.0, 4.5),
                                                    (-2.0, 6.5, -1.0, 4.0),
                                                    (0.75, 6.5, -1.0, 4.0),
                                                    (0.75, 6.5, -1.0, 4.5),
                                                    (0.75, 4.75, -1.0, 4.5),
                                                    (0.75, 4.75, -1.0, 4.0),
                                                    (-2.0, 4.75, -1.0, 4.0),
                                                    (-2.0, 4.75, -1.0, 4.5),
                                                    (-2.0, 4.75, -0.5, 4.5),
                                                    (-2.0, 4.75, -0.5, 4.0),
                                                    (0.75, 6.5, -0.5, 4.0),
                                                    (0.75, 6.5, -0.5, 4.5),
                                                    (-2.0, 6.5, -0.5, 4.5),
                                                    (-2.0, 6.5, -0.5, 4.0)]}

        init_triangulation(4, 2, check, nn_checks,
                           bounds=[(-2, 9), (3, 10), (-1, 1), (3, 5)])

    def test_4_1_5D_rec_init(self):
        """Test that the initial 5D cube has the correct coords"""
        check = [(0.0, 3.9, -1.5, 3.0, 9.5), (1.0, 10.0, 1.0, 5.0, 11.5),
                 (1.0, 3.9, -1.5, 3.0, 9.5), (1.0, 10.0, -1.5, 3.0, 9.5),
                 (1.0, 10.0, 1.0, 3.0, 9.5), (1.0, 10.0, 1.0, 5.0, 9.5),
                 (1.0, 10.0, 1.0, 3.0, 11.5), (1.0, 10.0, -1.5, 5.0, 9.5),
                 (1.0, 10.0, -1.5, 5.0, 11.5), (1.0, 10.0, -1.5, 3.0, 11.5),
                 (1.0, 3.9, 1.0, 3.0, 9.5), (1.0, 3.9, 1.0, 5.0, 9.5),
                 (1.0, 3.9, 1.0, 5.0, 11.5), (1.0, 3.9, 1.0, 3.0, 11.5),
                 (1.0, 3.9, -1.5, 5.0, 9.5), (1.0, 3.9, -1.5, 5.0, 11.5),
                 (1.0, 3.9, -1.5, 3.0, 11.5), (0.0, 10.0, -1.5, 3.0, 9.5),
                 (0.0, 10.0, 1.0, 3.0, 9.5), (0.0, 10.0, 1.0, 5.0, 9.5),
                 (0.0, 10.0, 1.0, 5.0, 11.5), (0.0, 10.0, 1.0, 3.0, 11.5),
                 (0.0, 10.0, -1.5, 5.0, 9.5), (0.0, 10.0, -1.5, 5.0, 11.5),
                 (0.0, 10.0, -1.5, 3.0, 11.5), (0.0, 3.9, 1.0, 3.0, 9.5),
                 (0.0, 3.9, 1.0, 5.0, 9.5), (0.0, 3.9, 1.0, 5.0, 11.5),
                 (0.0, 3.9, 1.0, 3.0, 11.5), (0.0, 3.9, -1.5, 5.0, 9.5),
                 (0.0, 3.9, -1.5, 5.0, 11.5), (0.0, 3.9, -1.5, 3.0, 11.5),
                 (0.5, 6.95, -0.25, 4.0, 10.5)]
        nn_checks = {(0.0, 3.9, -1.5, 3.0, 9.5): [(1.0, 10.0, -1.5, 3.0, 9.5),
                                                  (1.0, 3.9, -1.5, 5.0, 11.5),
                                                  (1.0, 10.0, 1.0, 3.0, 9.5),
                                                  (1.0, 3.9, 1.0, 3.0, 9.5),
                                                  (1.0, 10.0, -1.5, 5.0, 11.5),
                                                  (1.0, 3.9, 1.0, 5.0, 9.5),
                                                  (0.0, 10.0, 1.0, 5.0, 9.5),
                                                  (1.0, 10.0, -1.5, 3.0, 11.5),
                                                  (1.0, 3.9, 1.0, 3.0, 11.5),
                                                  (1.0, 10.0, -1.5, 5.0, 9.5),
                                                  (0.0, 10.0, 1.0, 5.0, 11.5),
                                                  (0.0, 3.9, -1.5, 3.0, 11.5),
                                                  (0.0, 3.9, 1.0, 5.0, 11.5),
                                                  (0.0, 3.9, 1.0, 5.0, 9.5),
                                                  (1.0, 3.9, -1.5, 3.0, 11.5),
                                                  (0.0, 3.9, -1.5, 5.0, 9.5),
                                                  (0.0, 3.9, 1.0, 3.0, 9.5),
                                                  (1.0, 3.9, -1.5, 3.0, 9.5),
                                                  (0.0, 3.9, -1.5, 5.0, 11.5),
                                                  (0.0, 10.0, -1.5, 5.0, 11.5),
                                                  (0.0, 3.9, 1.0, 3.0, 11.5),
                                                  (0.0, 10.0, 1.0, 3.0, 11.5),
                                                  (0.0, 10.0, -1.5, 3.0, 9.5),
                                                  (1.0, 10.0, 1.0, 5.0, 9.5),
                                                  (0.0, 10.0, -1.5, 5.0, 9.5),
                                                  (1.0, 3.9, -1.5, 5.0, 9.5),
                                                  (1.0, 10.0, 1.0, 3.0, 11.5),
                                                  (0.0, 10.0, 1.0, 3.0, 9.5),
                                                  (0.0, 10.0, -1.5, 3.0, 11.5),
                                                  (1.0, 3.9, 1.0, 5.0, 11.5), (
                                                  0.5, 6.95, -0.25, 4.0, 10.5)],
                     (0.0, 3.9, -1.5, 5.0, 9.5): [(1.0, 3.9, -1.5, 5.0, 11.5),
                                                  (0.0, 3.9, 1.0, 5.0, 9.5),
                                                  (1.0, 10.0, -1.5, 5.0, 9.5),
                                                  (0.0, 10.0, 1.0, 5.0, 11.5),
                                                  (1.0, 10.0, 1.0, 5.0, 11.5),
                                                  (1.0, 10.0, 1.0, 5.0, 9.5),
                                                  (1.0, 10.0, -1.5, 5.0, 11.5),
                                                  (1.0, 3.9, 1.0, 5.0, 9.5),
                                                  (0.0, 10.0, -1.5, 5.0, 9.5),
                                                  (0.0, 10.0, 1.0, 5.0, 9.5),
                                                  (0.0, 3.9, 1.0, 5.0, 11.5),
                                                  (1.0, 3.9, -1.5, 5.0, 9.5),
                                                  (0.0, 3.9, -1.5, 5.0, 11.5),
                                                  (1.0, 3.9, 1.0, 5.0, 11.5),
                                                  (0.0, 3.9, -1.5, 3.0, 9.5),
                                                  (0.0, 10.0, -1.5, 5.0, 11.5),
                                                  (
                                                  0.5, 6.95, -0.25, 4.0, 10.5)],
                     (0.0, 3.9, -1.5, 5.0, 11.5): [(1.0, 3.9, -1.5, 5.0, 11.5),
                                                   (0.0, 10.0, 1.0, 5.0, 11.5),
                                                   (0.0, 3.9, -1.5, 5.0, 9.5),
                                                   (1.0, 10.0, 1.0, 5.0, 11.5),
                                                   (0.0, 3.9, -1.5, 3.0, 11.5),
                                                   (1.0, 10.0, -1.5, 5.0, 11.5),
                                                   (0.0, 3.9, 1.0, 5.0, 11.5),
                                                   (1.0, 3.9, 1.0, 5.0, 11.5),
                                                   (0.0, 3.9, -1.5, 3.0, 9.5),
                                                   (0.0, 10.0, -1.5, 5.0, 11.5),
                                                   (0.5, 6.95, -0.25, 4.0,
                                                    10.5)]}

        init_triangulation(5, 0, check, nn_checks, bounds=[(0, 1), (3.9, 10), (-1.5, 1), (3, 5),
                                   (9.5, 11.5)])

    def test_4_2_5D_rec_splits(self):
        """Test that the 5D cube subtriangulations has the correct coords"""
        check = [(0.3, -3.9, -1.5, -3.0, -9.5), (1.0, 11.8, -1.1, 5.0, 11000.5),
                 (1.0, -3.9, -1.5, -3.0, -9.5), (1.0, 11.8, -1.5, -3.0, -9.5),
                 (1.0, 11.8, -1.1, -3.0, -9.5), (1.0, 11.8, -1.1, 5.0, -9.5),
                 (1.0, 11.8, -1.1, -3.0, 11000.5), (1.0, 11.8, -1.5, 5.0, -9.5),
                 (1.0, 11.8, -1.5, 5.0, 11000.5),
                 (1.0, 11.8, -1.5, -3.0, 11000.5),
                 (1.0, -3.9, -1.1, -3.0, -9.5), (1.0, -3.9, -1.1, 5.0, -9.5),
                 (1.0, -3.9, -1.1, 5.0, 11000.5),
                 (1.0, -3.9, -1.1, -3.0, 11000.5), (1.0, -3.9, -1.5, 5.0, -9.5),
                 (1.0, -3.9, -1.5, 5.0, 11000.5),
                 (1.0, -3.9, -1.5, -3.0, 11000.5),
                 (0.3, 11.8, -1.5, -3.0, -9.5), (0.3, 11.8, -1.1, -3.0, -9.5),
                 (0.3, 11.8, -1.1, 5.0, -9.5), (0.3, 11.8, -1.1, 5.0, 11000.5),
                 (0.3, 11.8, -1.1, -3.0, 11000.5), (0.3, 11.8, -1.5, 5.0, -9.5),
                 (0.3, 11.8, -1.5, 5.0, 11000.5),
                 (0.3, 11.8, -1.5, -3.0, 11000.5),
                 (0.3, -3.9, -1.1, -3.0, -9.5), (0.3, -3.9, -1.1, 5.0, -9.5),
                 (0.3, -3.9, -1.1, 5.0, 11000.5),
                 (0.3, -3.9, -1.1, -3.0, 11000.5), (0.3, -3.9, -1.5, 5.0, -9.5),
                 (0.3, -3.9, -1.5, 5.0, 11000.5),
                 (0.3, -3.9, -1.5, -3.0, 11000.5),
                 (0.65, 3.95, -1.3, 1.0, 5495.5),
                 (0.3, 3.95, -1.3, 1.0, 5495.5),
                 (0.3, -3.9, -1.3, 1.0, 5495.5), (0.3, -3.9, -1.5, 1.0, 5495.5),
                 (0.3, -3.9, -1.5, -3.0, 5495.5), (0.3, -3.9, -1.5, 1.0, -9.5),
                 (0.3, -3.9, -1.3, -3.0, 5495.5), (0.3, -3.9, -1.3, -3.0, -9.5),
                 (0.3, -3.9, -1.3, 1.0, -9.5),
                 (0.3, 3.95, -1.5, 1.0, 5495.5),
                 (0.3, 3.95, -1.5, -3.0, 5495.5),
                 (0.3, 3.95, -1.5, -3.0, -9.5),
                 (0.3, 3.95, -1.5, 1.0, -9.5),
                 (0.3, 3.95, -1.3, -3.0, 5495.5),
                 (0.3, 3.95, -1.3, -3.0, -9.5),
                 (0.3, 3.95, -1.3, 1.0, -9.5),
                 (0.65, -3.9, -1.3, 1.0, 5495.5),
                 (0.65, -3.9, -1.5, 1.0, 5495.5),
                 (0.65, -3.9, -1.5, -3.0, 5495.5),
                 (0.65, -3.9, -1.5, -3.0, -9.5),
                 (0.65, -3.9, -1.5, 1.0, -9.5),
                 (0.65, -3.9, -1.3, -3.0, 5495.5),
                 (0.65, -3.9, -1.3, -3.0, -9.5),
                 (0.65, -3.9, -1.3, 1.0, -9.5),
                 (0.65, 3.95, -1.5, 1.0, 5495.5),
                 (0.65, 3.95, -1.5, -3.0, 5495.5),
                 (0.65, 3.95, -1.5, -3.0, -9.5),
                 (0.65, 3.95, -1.5, 1.0, -9.5),
                 (0.65, 3.95, -1.3, -3.0, 5495.5),
                 (0.65, 3.95, -1.3, -3.0, -9.5),
                 (0.65, 3.95, -1.3, 1.0, -9.5),
                 (0.475, 0.025000000000000133, -1.4, -1.0, 2743.0),
                 (1.0, 3.95, -1.3, 1.0, 5495.5),
                 (1.0, 11.8, -1.3, 1.0, 5495.5), (1.0, 11.8, -1.1, 1.0, 5495.5),
                 (1.0, 11.8, -1.1, 5.0, 5495.5),
                 (1.0, 11.8, -1.1, 1.0, 11000.5),
                 (1.0, 11.8, -1.3, 5.0, 5495.5),
                 (1.0, 11.8, -1.3, 5.0, 11000.5),
                 (1.0, 11.8, -1.3, 1.0, 11000.5),
                 (1.0, 3.95, -1.1, 1.0, 5495.5),
                 (1.0, 3.95, -1.1, 5.0, 5495.5),
                 (1.0, 3.95, -1.1, 5.0, 11000.5),
                 (1.0, 3.95, -1.1, 1.0, 11000.5),
                 (1.0, 3.95, -1.3, 5.0, 5495.5),
                 (1.0, 3.95, -1.3, 5.0, 11000.5),
                 (1.0, 3.95, -1.3, 1.0, 11000.5),
                 (0.65, 11.8, -1.3, 1.0, 5495.5),
                 (0.65, 11.8, -1.1, 1.0, 5495.5),
                 (0.65, 11.8, -1.1, 5.0, 5495.5),
                 (0.65, 11.8, -1.1, 5.0, 11000.5),
                 (0.65, 11.8, -1.1, 1.0, 11000.5),
                 (0.65, 11.8, -1.3, 5.0, 5495.5),
                 (0.65, 11.8, -1.3, 5.0, 11000.5),
                 (0.65, 11.8, -1.3, 1.0, 11000.5),
                 (0.65, 3.95, -1.1, 1.0, 5495.5),
                 (0.65, 3.95, -1.1, 5.0, 5495.5),
                 (0.65, 3.95, -1.1, 5.0, 11000.5),
                 (0.65, 3.95, -1.1, 1.0, 11000.5),
                 (0.65, 3.95, -1.3, 5.0, 5495.5),
                 (0.65, 3.95, -1.3, 5.0, 11000.5),
                 (0.65, 3.95, -1.3, 1.0, 11000.5),
                 (0.825, 7.875, -1.2000000000000002, 3.0, 8248.0),
                 (1.0, -3.9, -1.3, 1.0, 5495.5), (1.0, -3.9, -1.5, 1.0, 5495.5),
                 (1.0, -3.9, -1.5, -3.0, 5495.5), (1.0, -3.9, -1.5, 1.0, -9.5),
                 (1.0, -3.9, -1.3, -3.0, 5495.5), (1.0, -3.9, -1.3, -3.0, -9.5),
                 (1.0, -3.9, -1.3, 1.0, -9.5),
                 (1.0, 3.95, -1.5, 1.0, 5495.5),
                 (1.0, 3.95, -1.5, -3.0, 5495.5),
                 (1.0, 3.95, -1.5, -3.0, -9.5),
                 (1.0, 3.95, -1.5, 1.0, -9.5),
                 (1.0, 3.95, -1.3, -3.0, 5495.5),
                 (1.0, 3.95, -1.3, -3.0, -9.5),
                 (1.0, 3.95, -1.3, 1.0, -9.5),
                 (0.825, 0.025000000000000133, -1.4, -1.0, 2743.0),
                 (1.0, 11.8, -1.5, 1.0, 5495.5),
                 (1.0, 11.8, -1.5, -3.0, 5495.5), (1.0, 11.8, -1.5, 1.0, -9.5),
                 (1.0, 11.8, -1.3, -3.0, 5495.5), (1.0, 11.8, -1.3, -3.0, -9.5),
                 (1.0, 11.8, -1.3, 1.0, -9.5),
                 (0.65, 11.8, -1.5, 1.0, 5495.5),
                 (0.65, 11.8, -1.5, -3.0, 5495.5),
                 (0.65, 11.8, -1.5, -3.0, -9.5),
                 (0.65, 11.8, -1.5, 1.0, -9.5),
                 (0.65, 11.8, -1.3, -3.0, 5495.5),
                 (0.65, 11.8, -1.3, -3.0, -9.5),
                 (0.65, 11.8, -1.3, 1.0, -9.5),
                 (0.825, 7.875, -1.4, -1.0, 2743.0),
                 (1.0, 11.8, -1.1, -3.0, 5495.5), (1.0, 11.8, -1.1, 1.0, -9.5),
                 (1.0, 3.95, -1.1, -3.0, 5495.5),
                 (1.0, 3.95, -1.1, -3.0, -9.5),
                 (1.0, 3.95, -1.1, 1.0, -9.5),
                 (0.65, 11.8, -1.1, -3.0, 5495.5),
                 (0.65, 11.8, -1.1, -3.0, -9.5),
                 (0.65, 11.8, -1.1, 1.0, -9.5),
                 (0.65, 3.95, -1.1, -3.0, 5495.5),
                 (0.65, 3.95, -1.1, -3.0, -9.5),
                 (0.65, 3.95, -1.1, 1.0, -9.5),
                 (0.825, 7.875, -1.2000000000000002, -1.0, 2743.0),
                 (1.0, 11.8, -1.3, 5.0, -9.5),
                 (1.0, 3.95, -1.1, 5.0, -9.5),
                 (1.0, 3.95, -1.3, 5.0, -9.5),
                 (0.65, 11.8, -1.1, 5.0, -9.5),
                 (0.65, 11.8, -1.3, 5.0, -9.5),
                 (0.65, 3.95, -1.1, 5.0, -9.5),
                 (0.65, 3.95, -1.3, 5.0, -9.5),
                 (0.825, 7.875, -1.2000000000000002, 3.0, 2743.0),
                 (1.0, 11.8, -1.3, -3.0, 11000.5),
                 (1.0, 3.95, -1.1, -3.0, 11000.5),
                 (1.0, 3.95, -1.3, -3.0, 11000.5),
                 (0.65, 11.8, -1.1, -3.0, 11000.5),
                 (0.65, 11.8, -1.3, -3.0, 11000.5),
                 (0.65, 3.95, -1.1, -3.0, 11000.5),
                 (0.65, 3.95, -1.3, -3.0, 11000.5),
                 (0.825, 7.875, -1.2000000000000002, -1.0, 8248.0),
                 (1.0, 11.8, -1.5, 5.0, 5495.5),
                 (1.0, 3.95, -1.5, 5.0, 5495.5),
                 (1.0, 3.95, -1.5, 5.0, -9.5),
                 (0.65, 11.8, -1.5, 5.0, 5495.5),
                 (0.65, 11.8, -1.5, 5.0, -9.5),
                 (0.65, 3.95, -1.5, 5.0, 5495.5),
                 (0.65, 3.95, -1.5, 5.0, -9.5),
                 (0.825, 7.875, -1.4, 3.0, 2743.0),
                 (1.0, 11.8, -1.5, 1.0, 11000.5),
                 (1.0, 3.95, -1.5, 5.0, 11000.5),
                 (1.0, 3.95, -1.5, 1.0, 11000.5),
                 (0.65, 11.8, -1.5, 5.0, 11000.5),
                 (0.65, 11.8, -1.5, 1.0, 11000.5),
                 (0.65, 3.95, -1.5, 5.0, 11000.5),
                 (0.65, 3.95, -1.5, 1.0, 11000.5),
                 (0.825, 7.875, -1.4, 3.0, 8248.0),
                 (1.0, 3.95, -1.5, -3.0, 11000.5),
                 (0.65, 11.8, -1.5, -3.0, 11000.5),
                 (0.65, 3.95, -1.5, -3.0, 11000.5),
                 (0.825, 7.875, -1.4, -1.0, 8248.0),
                 (1.0, -3.9, -1.1, 1.0, 5495.5),
                 (1.0, -3.9, -1.1, -3.0, 5495.5), (1.0, -3.9, -1.1, 1.0, -9.5),
                 (0.65, -3.9, -1.1, 1.0, 5495.5),
                 (0.65, -3.9, -1.1, -3.0, 5495.5),
                 (0.65, -3.9, -1.1, -3.0, -9.5),
                 (0.65, -3.9, -1.1, 1.0, -9.5), (
                 0.825, 0.025000000000000133, -1.2000000000000002, -1.0,
                 2743.0), (1.0, -3.9, -1.1, 5.0, 5495.5),
                 (1.0, -3.9, -1.3, 5.0, 5495.5), (1.0, -3.9, -1.3, 5.0, -9.5),
                 (0.65, -3.9, -1.1, 5.0, 5495.5),
                 (0.65, -3.9, -1.1, 5.0, -9.5),
                 (0.65, -3.9, -1.3, 5.0, 5495.5),
                 (0.65, -3.9, -1.3, 5.0, -9.5), (
                 0.825, 0.025000000000000133, -1.2000000000000002, 3.0, 2743.0),
                 (1.0, -3.9, -1.1, 1.0, 11000.5),
                 (1.0, -3.9, -1.3, 5.0, 11000.5),
                 (1.0, -3.9, -1.3, 1.0, 11000.5),
                 (0.65, -3.9, -1.1, 5.0, 11000.5),
                 (0.65, -3.9, -1.1, 1.0, 11000.5),
                 (0.65, -3.9, -1.3, 5.0, 11000.5),
                 (0.65, -3.9, -1.3, 1.0, 11000.5), (
                 0.825, 0.025000000000000133, -1.2000000000000002, 3.0, 8248.0),
                 (1.0, -3.9, -1.3, -3.0, 11000.5),
                 (0.65, -3.9, -1.1, -3.0, 11000.5),
                 (0.65, -3.9, -1.3, -3.0, 11000.5), (
                 0.825, 0.025000000000000133, -1.2000000000000002, -1.0,
                 8248.0), (1.0, -3.9, -1.5, 5.0, 5495.5),
                 (0.65, -3.9, -1.5, 5.0, 5495.5),
                 (0.65, -3.9, -1.5, 5.0, -9.5),
                 (0.825, 0.025000000000000133, -1.4, 3.0, 2743.0),
                 (1.0, -3.9, -1.5, 1.0, 11000.5),
                 (0.65, -3.9, -1.5, 5.0, 11000.5),
                 (0.65, -3.9, -1.5, 1.0, 11000.5),
                 (0.825, 0.025000000000000133, -1.4, 3.0, 8248.0),
                 (0.65, -3.9, -1.5, -3.0, 11000.5),
                 (0.825, 0.025000000000000133, -1.4, -1.0, 8248.0),
                 (0.3, 11.8, -1.3, 1.0, 5495.5), (0.3, 11.8, -1.5, 1.0, 5495.5),
                 (0.3, 11.8, -1.5, -3.0, 5495.5), (0.3, 11.8, -1.5, 1.0, -9.5),
                 (0.3, 11.8, -1.3, -3.0, 5495.5), (0.3, 11.8, -1.3, -3.0, -9.5),
                 (0.3, 11.8, -1.3, 1.0, -9.5),
                 (0.475, 7.875, -1.4, -1.0, 2743.0),
                 (0.3, 11.8, -1.1, 1.0, 5495.5),
                 (0.3, 11.8, -1.1, -3.0, 5495.5), (0.3, 11.8, -1.1, 1.0, -9.5),
                 (0.3, 3.95, -1.1, 1.0, 5495.5),
                 (0.3, 3.95, -1.1, -3.0, 5495.5),
                 (0.3, 3.95, -1.1, -3.0, -9.5),
                 (0.3, 3.95, -1.1, 1.0, -9.5),
                 (0.475, 7.875, -1.2000000000000002, -1.0, 2743.0),
                 (0.3, 11.8, -1.1, 5.0, 5495.5), (0.3, 11.8, -1.3, 5.0, 5495.5),
                 (0.3, 11.8, -1.3, 5.0, -9.5),
                 (0.3, 3.95, -1.1, 5.0, 5495.5),
                 (0.3, 3.95, -1.1, 5.0, -9.5),
                 (0.3, 3.95, -1.3, 5.0, 5495.5),
                 (0.3, 3.95, -1.3, 5.0, -9.5),
                 (0.475, 7.875, -1.2000000000000002, 3.0, 2743.0),
                 (0.3, 11.8, -1.1, 1.0, 11000.5),
                 (0.3, 11.8, -1.3, 5.0, 11000.5),
                 (0.3, 11.8, -1.3, 1.0, 11000.5),
                 (0.3, 3.95, -1.1, 5.0, 11000.5),
                 (0.3, 3.95, -1.1, 1.0, 11000.5),
                 (0.3, 3.95, -1.3, 5.0, 11000.5),
                 (0.3, 3.95, -1.3, 1.0, 11000.5),
                 (0.475, 7.875, -1.2000000000000002, 3.0, 8248.0),
                 (0.3, 11.8, -1.3, -3.0, 11000.5),
                 (0.3, 3.95, -1.1, -3.0, 11000.5),
                 (0.3, 3.95, -1.3, -3.0, 11000.5),
                 (0.475, 7.875, -1.2000000000000002, -1.0, 8248.0),
                 (0.3, 11.8, -1.5, 5.0, 5495.5),
                 (0.3, 3.95, -1.5, 5.0, 5495.5),
                 (0.3, 3.95, -1.5, 5.0, -9.5),
                 (0.475, 7.875, -1.4, 3.0, 2743.0),
                 (0.3, 11.8, -1.5, 1.0, 11000.5),
                 (0.3, 3.95, -1.5, 5.0, 11000.5),
                 (0.3, 3.95, -1.5, 1.0, 11000.5),
                 (0.475, 7.875, -1.4, 3.0, 8248.0),
                 (0.3, 3.95, -1.5, -3.0, 11000.5),
                 (0.475, 7.875, -1.4, -1.0, 8248.0),
                 (0.3, -3.9, -1.1, 1.0, 5495.5),
                 (0.3, -3.9, -1.1, -3.0, 5495.5), (0.3, -3.9, -1.1, 1.0, -9.5),
                 (0.475, 0.025000000000000133, -1.2000000000000002, -1.0,
                  2743.0), (0.3, -3.9, -1.1, 5.0, 5495.5),
                 (0.3, -3.9, -1.3, 5.0, 5495.5), (0.3, -3.9, -1.3, 5.0, -9.5), (
                 0.475, 0.025000000000000133, -1.2000000000000002, 3.0, 2743.0),
                 (0.3, -3.9, -1.1, 1.0, 11000.5),
                 (0.3, -3.9, -1.3, 5.0, 11000.5),
                 (0.3, -3.9, -1.3, 1.0, 11000.5), (
                 0.475, 0.025000000000000133, -1.2000000000000002, 3.0, 8248.0),
                 (0.3, -3.9, -1.3, -3.0, 11000.5), (
                 0.475, 0.025000000000000133, -1.2000000000000002, -1.0,
                 8248.0), (0.3, -3.9, -1.5, 5.0, 5495.5),
                 (0.475, 0.025000000000000133, -1.4, 3.0, 2743.0),
                 (0.3, -3.9, -1.5, 1.0, 11000.5),
                 (0.475, 0.025000000000000133, -1.4, 3.0, 8248.0),
                 (0.475, 0.025000000000000133, -1.4, -1.0, 8248.0)]
        nn_checks = {
            (0.3, -3.9, -1.5, -3.0, -9.5): [(0.3, -3.9, -1.5, 1.0, -9.5),
                                            (0.65, -3.9, -1.3, 1.0, 5495.5),
                                            (0.65, -3.9, -1.5, 1.0, 5495.5),
                                            (0.3, -3.9, -1.5, 1.0, 5495.5),
                                            (0.3, -3.9, -1.3, 1.0, 5495.5),
                                            (0.65, -3.9, -1.3, 1.0, -9.5),
                                            (0.65, -3.9, -1.5, 1.0, -9.5),
                                            (0.3, -3.9, -1.3, 1.0, -9.5),
                                            (0.3, 3.95, -1.5, -3.0, 5495.5),
                                            (0.65, 3.95, -1.5, -3.0, -9.5),
                                            (0.3, 3.95, -1.3, -3.0, 5495.5),
                                            (0.65, 3.95, -1.3, -3.0, -9.5),
                                            (0.3, 3.95, -1.3, -3.0, -9.5),
                                            (0.3, 3.95, -1.5, -3.0, -9.5),
                                            (0.65, 3.95, -1.3, -3.0, 5495.5),
                                            (0.65, 3.95, -1.5, -3.0, 5495.5),
                                            (0.3, -3.9, -1.3, -3.0, -9.5),
                                            (0.65, -3.9, -1.5, -3.0, 5495.5),
                                            (0.65, -3.9, -1.3, -3.0, 5495.5),
                                            (0.3, -3.9, -1.3, -3.0, 5495.5),
                                            (0.3, -3.9, -1.5, -3.0, 5495.5),
                                            (0.65, -3.9, -1.3, -3.0, -9.5),
                                            (0.65, -3.9, -1.5, -3.0, -9.5),
                                            (0.3, 3.95, -1.3, 1.0, 5495.5),
                                            (0.3, 3.95, -1.5, 1.0, 5495.5),
                                            (0.65, 3.95, -1.3, 1.0, -9.5),
                                            (0.65, 3.95, -1.5, 1.0, -9.5),
                                            (0.3, 3.95, -1.5, 1.0, -9.5),
                                            (0.65, 3.95, -1.5, 1.0, 5495.5), (
                                            0.475, 0.025000000000000133, -1.4,
                                            -1.0, 2743.0),
                                            (0.3, 3.95, -1.3, 1.0, -9.5)],
            (0.3, -3.9, -1.5, 1.0, 11000.5): [(0.3, -3.9, -1.5, -3.0, 11000.5),
                                              (0.3, -3.9, -1.3, 1.0, 11000.5), (
                                              0.475, 0.025000000000000133, -1.4,
                                              3.0, 8248.0),
                                              (0.65, -3.9, -1.5, 1.0, 11000.5),
                                              (0.65, -3.9, -1.3, 1.0, 11000.5),
                                              (0.3, -3.9, -1.5, 1.0, 5495.5),
                                              (0.3, -3.9, -1.3, 1.0, 5495.5),
                                              (0.65, -3.9, -1.3, 1.0, 5495.5),
                                              (0.65, -3.9, -1.5, 1.0, 5495.5), (
                                              0.475, 0.025000000000000133, -1.4,
                                              -1.0, 8248.0),
                                              (0.65, 3.95, -1.5, 1.0, 5495.5),
                                              (0.65, 3.95, -1.3, 1.0, 5495.5),
                                              (0.65, 3.95, -1.5, 1.0, 11000.5),
                                              (0.3, 3.95, -1.5, 1.0, 11000.5),
                                              (0.3, 3.95, -1.3, 1.0, 5495.5),
                                              (0.65, 3.95, -1.3, 1.0, 11000.5),
                                              (0.3, 3.95, -1.5, 1.0, 5495.5),
                                              (0.3, -3.9, -1.5, 5.0, 11000.5),
                                              (0.3, 3.95, -1.3, 1.0, 11000.5)],
            (0.475, 0.025000000000000133, -1.4, 3.0, 8248.0): [
                (0.65, 3.95, -1.5, 5.0, 11000.5),
                (0.65, 3.95, -1.3, 5.0, 11000.5),
                (0.3, -3.9, -1.5, 1.0, 11000.5),
                (0.3, 3.95, -1.3, 5.0, 11000.5),
                (0.65, -3.9, -1.3, 1.0, 11000.5),
                (0.3, 3.95, -1.5, 5.0, 11000.5),
                (0.65, -3.9, -1.5, 1.0, 11000.5),
                (0.3, -3.9, -1.3, 1.0, 11000.5),
                (0.65, -3.9, -1.3, 1.0, 5495.5),
                (0.65, -3.9, -1.5, 1.0, 5495.5), (0.3, -3.9, -1.5, 1.0, 5495.5),
                (0.3, -3.9, -1.3, 1.0, 5495.5), (0.3, 3.95, -1.5, 5.0, 5495.5),
                (0.3, 3.95, -1.3, 5.0, 5495.5), (0.65, -3.9, -1.5, 5.0, 5495.5),
                (0.65, -3.9, -1.3, 5.0, 5495.5), (0.3, -3.9, -1.5, 5.0, 5495.5),
                (0.3, -3.9, -1.3, 5.0, 5495.5), (0.65, 3.95, -1.3, 5.0, 5495.5),
                (0.65, 3.95, -1.5, 5.0, 5495.5), (0.3, 3.95, -1.3, 1.0, 5495.5),
                (0.3, 3.95, -1.5, 1.0, 5495.5),
                (0.65, 3.95, -1.3, 1.0, 11000.5),
                (0.3, -3.9, -1.3, 5.0, 11000.5),
                (0.65, 3.95, -1.5, 1.0, 11000.5),
                (0.3, -3.9, -1.5, 5.0, 11000.5),
                (0.3, 3.95, -1.5, 1.0, 11000.5),
                (0.65, 3.95, -1.5, 1.0, 5495.5),
                (0.3, 3.95, -1.3, 1.0, 11000.5),
                (0.65, 3.95, -1.3, 1.0, 5495.5),
                (0.65, -3.9, -1.3, 5.0, 11000.5),
                (0.65, -3.9, -1.5, 5.0, 11000.5)]}

        init_triangulation(5, 1, check, nn_checks,
                           bounds=[(0.3, 1), (-3.9, 11.8), (-1.5, -1.1),
                                   (-3, 5), (-9.5, 11000.5)])


class TestField(object):
    def test_1_1_2D_field(self):
        pass
        #n = 2
        #bounds = [-10, 10]

        #HC = Complex(n, func, bounds=bounds)


class TestPlotting(object):
    def test_1_1_1D_complex(self):
        H = Complex(1, domain=[(0, 10)])
        H.triangulate()
        H.plot_complex(show=False, save_fig=False)

    def test_1_2_2D_complex(self):
        H = Complex(2, domain=[(-5, 10), (-3, 10)])
        H.triangulate()
        H.plot_complex(show=False, save_fig=False)

    def test_1_3_3D_complex(self):
        H = Complex(3, domain=[(0, 10), (0, 10), (0, 10)])
        H.triangulate()
        H.plot_complex(show=False, save_fig=False)

    def test_2_1_1D_complex_suface(self):
        def f(x):
            return numpy.sin(x)
        H = Complex(1, sfield=f, domain=[(0, 10)])
        H.triangulate()
        H.plot_complex(show=False, save_fig=False)

    def test_2_2_2D_complex(self):
        def f(x):  # Ursem01
            return -numpy.sin(2 * x[0] - 0.5 * numpy.pi) - 3 * numpy.cos(
                x[1]) - 0.5 * x[0]
        H = Complex(2, sfield=f, domain=[(0, 10), (0, 10)])
        H.triangulate()
        H.plot_complex(show=False, save_fig=False)

    def test_2_3_3D_complex(self):
        def f(x):
            return x[0] + x[1] + x[2]
        H = Complex(3, sfield=f, domain=[(0, 10), (0, 10), (0, 10)])
        H.triangulate()
        H.plot_complex(show=1, save_fig=False)